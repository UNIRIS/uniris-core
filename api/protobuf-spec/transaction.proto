syntax = "proto3";

import "discovery.proto";

package api;

service TransactionService {
    rpc GetLastTransaction(LastTransactionRequest) returns (LastTransactionResponse);
    rpc GetTransactionStatus(TransactionStatusRequest) returns (TransactionStatusResponse);
    rpc LockTransaction(LockRequest) returns (LockResponse);
    rpc PreValidateTransaction(PreValidationRequest) returns (PreValidationResponse);
    rpc ConfirmTransactionValidation(ConfirmValidationRequest) returns (ConfirmValidationResponse);
    rpc StoreTransaction(StoreRequest) returns (StoreResponse);
}

message LastTransactionRequest{
    string transaction_address = 1;
    TransactionType type = 2;
    int64 timestamp = 3;
    string signature_request = 4;
}

message LastTransactionResponse {
    Transaction transaction = 1;
    int64 timestamp = 2;
    string signature_response = 3;
}

message TransactionStatusRequest {
    string transaction_hash = 1;
    int64 timestamp = 2;
    string signature_request = 3;
}

message TransactionStatusResponse {
    enum TransactionStatus {
        UNKNOWN = 0;
        PENDING = 1;
        SUCCESS = 2;
        FAILURE = 3;
    }

    TransactionStatus status = 1;
    int64 timestamp = 2;
    string signature_response = 3;
}

message LockRequest {
    string transaction_hash = 1;
    string address = 2;
    string master_peer_ip = 3;
    int64 timestamp = 4;
    string signature_request = 5;
}

message LockResponse {
    int64 timestamp = 1;
    string signature_response = 2;
}

enum TransactionType {
    KEYCHAIN = 0;
    ID = 1;
    CONTRACT_CREATION = 2;
}

message Transaction {
    string address = 1;
    TransactionType type = 2;
    string data = 3;
    int64 timestamp = 4;
    string public_key = 5;
    string signature = 6;
    string emitter_signature = 7;
    TransactionProposal proposal = 8;
    string transaction_hash = 9;
}

message TransactionProposal {
    SharedKeys shared_emitter_keys = 1;
}

message SharedKeys {
    string encrypted_private_key = 1;
    string public_key = 2;
}

message PreValidationRequest {
    Transaction transaction = 1;
    int32 minimum_validations = 2;
    int64 timestamp = 3;
    string signature_request = 4;
}

message PreValidationResponse {
    int64 timestamp = 1;
    string signature_response = 2;
}

message ConfirmValidationRequest {
    Transaction transaction = 1;
    MasterValidation master_validation = 2;
    int64 timestamp = 3;
    string signature_request = 4;
}

message ConfirmValidationResponse {
    MinerValidation validation = 1;
    int64 timestamp = 2;
    string signature_response = 3;
}

message MasterValidation {
    repeated PoolMember previous_transaction_miners = 1;
    string proof_of_work = 2;
    MinerValidation pre_validation = 3;
}

message PoolMember {
    string ip = 1;
    int32 port = 2;
}

message MinerValidation {
    enum ValidationStatus {
        NO = 0;
        OK = 1;
    }
    
    string public_key = 1;
    ValidationStatus status = 2;
    int64 timestamp = 3;
    string signature = 4;
}

message MinedTransaction {
    Transaction transaction = 1;
    MasterValidation master_validation = 2;
    repeated MinerValidation confirm_validations = 3;
}

message StoreRequest {
    MinedTransaction mined_transaction = 1;
    int64 timestamp = 2;
    string signature_request = 3;
}

message StoreResponse {
    int64 timestamp = 1;
    string signature_response = 2;
}