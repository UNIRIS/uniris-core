// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lockService.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LockRequest struct {
	TransactionHash      string   `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	MasterPeerPublicKey  string   `protobuf:"bytes,3,opt,name=master_peer_public_key,json=masterPeerPublicKey,proto3" json:"master_peer_public_key,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SignatureRequest     string   `protobuf:"bytes,5,opt,name=signature_request,json=signatureRequest,proto3" json:"signature_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockRequest) Reset()         { *m = LockRequest{} }
func (m *LockRequest) String() string { return proto.CompactTextString(m) }
func (*LockRequest) ProtoMessage()    {}
func (*LockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_lockService_d195f7a58cf32c7d, []int{0}
}
func (m *LockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockRequest.Unmarshal(m, b)
}
func (m *LockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockRequest.Marshal(b, m, deterministic)
}
func (dst *LockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockRequest.Merge(dst, src)
}
func (m *LockRequest) XXX_Size() int {
	return xxx_messageInfo_LockRequest.Size(m)
}
func (m *LockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockRequest proto.InternalMessageInfo

func (m *LockRequest) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *LockRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *LockRequest) GetMasterPeerPublicKey() string {
	if m != nil {
		return m.MasterPeerPublicKey
	}
	return ""
}

func (m *LockRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LockRequest) GetSignatureRequest() string {
	if m != nil {
		return m.SignatureRequest
	}
	return ""
}

type LockResponse struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SignatureResponse    string   `protobuf:"bytes,2,opt,name=signature_response,json=signatureResponse,proto3" json:"signature_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockResponse) Reset()         { *m = LockResponse{} }
func (m *LockResponse) String() string { return proto.CompactTextString(m) }
func (*LockResponse) ProtoMessage()    {}
func (*LockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_lockService_d195f7a58cf32c7d, []int{1}
}
func (m *LockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockResponse.Unmarshal(m, b)
}
func (m *LockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockResponse.Marshal(b, m, deterministic)
}
func (dst *LockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockResponse.Merge(dst, src)
}
func (m *LockResponse) XXX_Size() int {
	return xxx_messageInfo_LockResponse.Size(m)
}
func (m *LockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LockResponse proto.InternalMessageInfo

func (m *LockResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LockResponse) GetSignatureResponse() string {
	if m != nil {
		return m.SignatureResponse
	}
	return ""
}

func init() {
	proto.RegisterType((*LockRequest)(nil), "api.LockRequest")
	proto.RegisterType((*LockResponse)(nil), "api.LockResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LockServiceClient is the client API for LockService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LockServiceClient interface {
	LockTransaction(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error)
	UnlockTransaction(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error)
}

type lockServiceClient struct {
	cc *grpc.ClientConn
}

func NewLockServiceClient(cc *grpc.ClientConn) LockServiceClient {
	return &lockServiceClient{cc}
}

func (c *lockServiceClient) LockTransaction(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error) {
	out := new(LockResponse)
	err := c.cc.Invoke(ctx, "/api.LockService/LockTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lockServiceClient) UnlockTransaction(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error) {
	out := new(LockResponse)
	err := c.cc.Invoke(ctx, "/api.LockService/UnlockTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LockServiceServer is the server API for LockService service.
type LockServiceServer interface {
	LockTransaction(context.Context, *LockRequest) (*LockResponse, error)
	UnlockTransaction(context.Context, *LockRequest) (*LockResponse, error)
}

func RegisterLockServiceServer(s *grpc.Server, srv LockServiceServer) {
	s.RegisterService(&_LockService_serviceDesc, srv)
}

func _LockService_LockTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LockServiceServer).LockTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LockService/LockTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LockServiceServer).LockTransaction(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LockService_UnlockTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LockServiceServer).UnlockTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LockService/UnlockTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LockServiceServer).UnlockTransaction(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LockService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.LockService",
	HandlerType: (*LockServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LockTransaction",
			Handler:    _LockService_LockTransaction_Handler,
		},
		{
			MethodName: "UnlockTransaction",
			Handler:    _LockService_UnlockTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lockService.proto",
}

func init() { proto.RegisterFile("lockService.proto", fileDescriptor_lockService_d195f7a58cf32c7d) }

var fileDescriptor_lockService_d195f7a58cf32c7d = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x89, 0xf1, 0x0f, 0x1d, 0x85, 0x26, 0x2b, 0xc8, 0x22, 0x1e, 0x4a, 0x4f, 0x15, 0x31,
	0x07, 0x0b, 0xe2, 0x23, 0x08, 0x7a, 0x28, 0x51, 0x4f, 0x1e, 0xc2, 0x34, 0x1d, 0xcc, 0x92, 0x3f,
	0xbb, 0xee, 0x6c, 0x84, 0x9e, 0x7c, 0x47, 0x9f, 0x48, 0x9a, 0x8d, 0x36, 0x7a, 0xec, 0x65, 0x61,
	0xe6, 0x9b, 0xf9, 0x31, 0xdf, 0xb7, 0x10, 0x57, 0x3a, 0x2f, 0x9f, 0xc8, 0x7e, 0xa8, 0x9c, 0x12,
	0x63, 0xb5, 0xd3, 0x22, 0x44, 0xa3, 0xa6, 0x5f, 0x01, 0x1c, 0x3f, 0xea, 0xbc, 0x4c, 0xe9, 0xbd,
	0x25, 0x76, 0xe2, 0x12, 0x22, 0x67, 0xb1, 0x61, 0xcc, 0x9d, 0xd2, 0x4d, 0x56, 0x20, 0x17, 0x32,
	0x98, 0x04, 0xb3, 0x51, 0x3a, 0x1e, 0xf4, 0xef, 0x91, 0x0b, 0x21, 0xe1, 0x08, 0x57, 0x2b, 0x4b,
	0xcc, 0x72, 0xaf, 0x9b, 0xf8, 0x29, 0xc5, 0x1c, 0xce, 0x6a, 0x64, 0x47, 0x36, 0x33, 0xb4, 0x79,
	0xda, 0x65, 0xa5, 0xf2, 0xac, 0xa4, 0xb5, 0x0c, 0xbb, 0xc1, 0x53, 0xaf, 0x2e, 0x88, 0xec, 0xa2,
	0xd3, 0x1e, 0x68, 0x2d, 0x2e, 0x60, 0xe4, 0x54, 0x4d, 0xec, 0xb0, 0x36, 0x72, 0x7f, 0x12, 0xcc,
	0xc2, 0x74, 0xdb, 0x10, 0x57, 0x10, 0xb3, 0x7a, 0x6b, 0xd0, 0xb5, 0x96, 0x32, 0xeb, 0x8f, 0x95,
	0x07, 0x1d, 0x2d, 0xfa, 0x15, 0x7a, 0x13, 0xd3, 0x57, 0x38, 0xf1, 0x9e, 0xd8, 0xe8, 0x86, 0xe9,
	0x2f, 0x3a, 0xf8, 0x8f, 0xbe, 0x06, 0x31, 0x44, 0xfb, 0x9d, 0xde, 0x52, 0x3c, 0x60, 0x7b, 0xe1,
	0xe6, 0xd3, 0x07, 0xd6, 0x67, 0x29, 0x6e, 0x61, 0xbc, 0x29, 0x9f, 0xb7, 0xe1, 0x88, 0x28, 0x41,
	0xa3, 0x92, 0x41, 0xaa, 0xe7, 0xf1, 0xa0, 0xd3, 0xdf, 0x74, 0x07, 0xf1, 0x4b, 0x53, 0xed, 0xb0,
	0xb9, 0x3c, 0xec, 0xbe, 0x6f, 0xfe, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xad, 0x55, 0x5a, 0xe5, 0xd3,
	0x01, 0x00, 0x00,
}
