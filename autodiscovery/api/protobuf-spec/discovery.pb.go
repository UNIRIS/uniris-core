// Code generated by protoc-gen-go. DO NOT EDIT.
// source: discovery.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PeerDetailed_PeerState_PeerStatus int32

const (
	PeerDetailed_PeerState_Fault        PeerDetailed_PeerState_PeerStatus = 0
	PeerDetailed_PeerState_Bootstraping PeerDetailed_PeerState_PeerStatus = 1
	PeerDetailed_PeerState_Ok           PeerDetailed_PeerState_PeerStatus = 2
	PeerDetailed_PeerState_StorageOnly  PeerDetailed_PeerState_PeerStatus = 3
)

var PeerDetailed_PeerState_PeerStatus_name = map[int32]string{
	0: "Fault",
	1: "Bootstraping",
	2: "Ok",
	3: "StorageOnly",
}

var PeerDetailed_PeerState_PeerStatus_value = map[string]int32{
	"Fault":        0,
	"Bootstraping": 1,
	"Ok":           2,
	"StorageOnly":  3,
}

func (x PeerDetailed_PeerState_PeerStatus) String() string {
	return proto.EnumName(PeerDetailed_PeerState_PeerStatus_name, int32(x))
}

func (PeerDetailed_PeerState_PeerStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{4, 0, 0}
}

type SynRequest struct {
	Initiator            *PeerDigest   `protobuf:"bytes,1,opt,name=Initiator,proto3" json:"Initiator,omitempty"`
	Receiver             *PeerDigest   `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	KnownPeers           []*PeerDigest `protobuf:"bytes,3,rep,name=KnownPeers,proto3" json:"KnownPeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SynRequest) Reset()         { *m = SynRequest{} }
func (m *SynRequest) String() string { return proto.CompactTextString(m) }
func (*SynRequest) ProtoMessage()    {}
func (*SynRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{0}
}

func (m *SynRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynRequest.Unmarshal(m, b)
}
func (m *SynRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynRequest.Marshal(b, m, deterministic)
}
func (m *SynRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynRequest.Merge(m, src)
}
func (m *SynRequest) XXX_Size() int {
	return xxx_messageInfo_SynRequest.Size(m)
}
func (m *SynRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SynRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SynRequest proto.InternalMessageInfo

func (m *SynRequest) GetInitiator() *PeerDigest {
	if m != nil {
		return m.Initiator
	}
	return nil
}

func (m *SynRequest) GetReceiver() *PeerDigest {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *SynRequest) GetKnownPeers() []*PeerDigest {
	if m != nil {
		return m.KnownPeers
	}
	return nil
}

type AckRequest struct {
	Initiator            *PeerDigest     `protobuf:"bytes,1,opt,name=Initiator,proto3" json:"Initiator,omitempty"`
	Receiver             *PeerDigest     `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	RequestedPeers       []*PeerDetailed `protobuf:"bytes,3,rep,name=RequestedPeers,proto3" json:"RequestedPeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AckRequest) Reset()         { *m = AckRequest{} }
func (m *AckRequest) String() string { return proto.CompactTextString(m) }
func (*AckRequest) ProtoMessage()    {}
func (*AckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{1}
}

func (m *AckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckRequest.Unmarshal(m, b)
}
func (m *AckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckRequest.Marshal(b, m, deterministic)
}
func (m *AckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckRequest.Merge(m, src)
}
func (m *AckRequest) XXX_Size() int {
	return xxx_messageInfo_AckRequest.Size(m)
}
func (m *AckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AckRequest proto.InternalMessageInfo

func (m *AckRequest) GetInitiator() *PeerDigest {
	if m != nil {
		return m.Initiator
	}
	return nil
}

func (m *AckRequest) GetReceiver() *PeerDigest {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *AckRequest) GetRequestedPeers() []*PeerDetailed {
	if m != nil {
		return m.RequestedPeers
	}
	return nil
}

type SynAck struct {
	Initiator            *PeerDigest     `protobuf:"bytes,1,opt,name=Initiator,proto3" json:"Initiator,omitempty"`
	Receiver             *PeerDigest     `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	NewPeers             []*PeerDetailed `protobuf:"bytes,3,rep,name=NewPeers,proto3" json:"NewPeers,omitempty"`
	UnknownPeers         []*PeerDigest   `protobuf:"bytes,4,rep,name=UnknownPeers,proto3" json:"UnknownPeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SynAck) Reset()         { *m = SynAck{} }
func (m *SynAck) String() string { return proto.CompactTextString(m) }
func (*SynAck) ProtoMessage()    {}
func (*SynAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{2}
}

func (m *SynAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynAck.Unmarshal(m, b)
}
func (m *SynAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynAck.Marshal(b, m, deterministic)
}
func (m *SynAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynAck.Merge(m, src)
}
func (m *SynAck) XXX_Size() int {
	return xxx_messageInfo_SynAck.Size(m)
}
func (m *SynAck) XXX_DiscardUnknown() {
	xxx_messageInfo_SynAck.DiscardUnknown(m)
}

var xxx_messageInfo_SynAck proto.InternalMessageInfo

func (m *SynAck) GetInitiator() *PeerDigest {
	if m != nil {
		return m.Initiator
	}
	return nil
}

func (m *SynAck) GetReceiver() *PeerDigest {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *SynAck) GetNewPeers() []*PeerDetailed {
	if m != nil {
		return m.NewPeers
	}
	return nil
}

func (m *SynAck) GetUnknownPeers() []*PeerDigest {
	if m != nil {
		return m.UnknownPeers
	}
	return nil
}

type PeerDigest struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	IP                   string   `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerDigest) Reset()         { *m = PeerDigest{} }
func (m *PeerDigest) String() string { return proto.CompactTextString(m) }
func (*PeerDigest) ProtoMessage()    {}
func (*PeerDigest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{3}
}

func (m *PeerDigest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerDigest.Unmarshal(m, b)
}
func (m *PeerDigest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerDigest.Marshal(b, m, deterministic)
}
func (m *PeerDigest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerDigest.Merge(m, src)
}
func (m *PeerDigest) XXX_Size() int {
	return xxx_messageInfo_PeerDigest.Size(m)
}
func (m *PeerDigest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerDigest.DiscardUnknown(m)
}

var xxx_messageInfo_PeerDigest proto.InternalMessageInfo

func (m *PeerDigest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *PeerDigest) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *PeerDigest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type PeerDetailed struct {
	PublicKey            []byte                  `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	IP                   string                  `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 int32                   `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	GenerationTime       int64                   `protobuf:"varint,4,opt,name=GenerationTime,proto3" json:"GenerationTime,omitempty"`
	State                *PeerDetailed_PeerState `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PeerDetailed) Reset()         { *m = PeerDetailed{} }
func (m *PeerDetailed) String() string { return proto.CompactTextString(m) }
func (*PeerDetailed) ProtoMessage()    {}
func (*PeerDetailed) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{4}
}

func (m *PeerDetailed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerDetailed.Unmarshal(m, b)
}
func (m *PeerDetailed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerDetailed.Marshal(b, m, deterministic)
}
func (m *PeerDetailed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerDetailed.Merge(m, src)
}
func (m *PeerDetailed) XXX_Size() int {
	return xxx_messageInfo_PeerDetailed.Size(m)
}
func (m *PeerDetailed) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerDetailed.DiscardUnknown(m)
}

var xxx_messageInfo_PeerDetailed proto.InternalMessageInfo

func (m *PeerDetailed) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *PeerDetailed) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *PeerDetailed) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PeerDetailed) GetGenerationTime() int64 {
	if m != nil {
		return m.GenerationTime
	}
	return 0
}

func (m *PeerDetailed) GetState() *PeerDetailed_PeerState {
	if m != nil {
		return m.State
	}
	return nil
}

type PeerDetailed_PeerState struct {
	Status               PeerDetailed_PeerState_PeerStatus      `protobuf:"varint,1,opt,name=Status,proto3,enum=api.PeerDetailed_PeerState_PeerStatus" json:"Status,omitempty"`
	CPULoad              string                                 `protobuf:"bytes,2,opt,name=CPULoad,proto3" json:"CPULoad,omitempty"`
	FreeDiskSpace        float32                                `protobuf:"fixed32,3,opt,name=FreeDiskSpace,proto3" json:"FreeDiskSpace,omitempty"`
	Version              string                                 `protobuf:"bytes,4,opt,name=Version,proto3" json:"Version,omitempty"`
	GeoPosition          *PeerDetailed_PeerState_GeoCoordinates `protobuf:"bytes,5,opt,name=GeoPosition,proto3" json:"GeoPosition,omitempty"`
	P2PFactor            int32                                  `protobuf:"varint,6,opt,name=P2PFactor,proto3" json:"P2PFactor,omitempty"`
	DiscoveredPeers      int32                                  `protobuf:"varint,7,opt,name=DiscoveredPeers,proto3" json:"DiscoveredPeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *PeerDetailed_PeerState) Reset()         { *m = PeerDetailed_PeerState{} }
func (m *PeerDetailed_PeerState) String() string { return proto.CompactTextString(m) }
func (*PeerDetailed_PeerState) ProtoMessage()    {}
func (*PeerDetailed_PeerState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{4, 0}
}

func (m *PeerDetailed_PeerState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerDetailed_PeerState.Unmarshal(m, b)
}
func (m *PeerDetailed_PeerState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerDetailed_PeerState.Marshal(b, m, deterministic)
}
func (m *PeerDetailed_PeerState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerDetailed_PeerState.Merge(m, src)
}
func (m *PeerDetailed_PeerState) XXX_Size() int {
	return xxx_messageInfo_PeerDetailed_PeerState.Size(m)
}
func (m *PeerDetailed_PeerState) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerDetailed_PeerState.DiscardUnknown(m)
}

var xxx_messageInfo_PeerDetailed_PeerState proto.InternalMessageInfo

func (m *PeerDetailed_PeerState) GetStatus() PeerDetailed_PeerState_PeerStatus {
	if m != nil {
		return m.Status
	}
	return PeerDetailed_PeerState_Fault
}

func (m *PeerDetailed_PeerState) GetCPULoad() string {
	if m != nil {
		return m.CPULoad
	}
	return ""
}

func (m *PeerDetailed_PeerState) GetFreeDiskSpace() float32 {
	if m != nil {
		return m.FreeDiskSpace
	}
	return 0
}

func (m *PeerDetailed_PeerState) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PeerDetailed_PeerState) GetGeoPosition() *PeerDetailed_PeerState_GeoCoordinates {
	if m != nil {
		return m.GeoPosition
	}
	return nil
}

func (m *PeerDetailed_PeerState) GetP2PFactor() int32 {
	if m != nil {
		return m.P2PFactor
	}
	return 0
}

func (m *PeerDetailed_PeerState) GetDiscoveredPeers() int32 {
	if m != nil {
		return m.DiscoveredPeers
	}
	return 0
}

type PeerDetailed_PeerState_GeoCoordinates struct {
	Lat                  float32  `protobuf:"fixed32,1,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Lon                  float32  `protobuf:"fixed32,2,opt,name=Lon,proto3" json:"Lon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerDetailed_PeerState_GeoCoordinates) Reset()         { *m = PeerDetailed_PeerState_GeoCoordinates{} }
func (m *PeerDetailed_PeerState_GeoCoordinates) String() string { return proto.CompactTextString(m) }
func (*PeerDetailed_PeerState_GeoCoordinates) ProtoMessage()    {}
func (*PeerDetailed_PeerState_GeoCoordinates) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{4, 0, 0}
}

func (m *PeerDetailed_PeerState_GeoCoordinates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerDetailed_PeerState_GeoCoordinates.Unmarshal(m, b)
}
func (m *PeerDetailed_PeerState_GeoCoordinates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerDetailed_PeerState_GeoCoordinates.Marshal(b, m, deterministic)
}
func (m *PeerDetailed_PeerState_GeoCoordinates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerDetailed_PeerState_GeoCoordinates.Merge(m, src)
}
func (m *PeerDetailed_PeerState_GeoCoordinates) XXX_Size() int {
	return xxx_messageInfo_PeerDetailed_PeerState_GeoCoordinates.Size(m)
}
func (m *PeerDetailed_PeerState_GeoCoordinates) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerDetailed_PeerState_GeoCoordinates.DiscardUnknown(m)
}

var xxx_messageInfo_PeerDetailed_PeerState_GeoCoordinates proto.InternalMessageInfo

func (m *PeerDetailed_PeerState_GeoCoordinates) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *PeerDetailed_PeerState_GeoCoordinates) GetLon() float32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func init() {
	proto.RegisterEnum("api.PeerDetailed_PeerState_PeerStatus", PeerDetailed_PeerState_PeerStatus_name, PeerDetailed_PeerState_PeerStatus_value)
	proto.RegisterType((*SynRequest)(nil), "api.SynRequest")
	proto.RegisterType((*AckRequest)(nil), "api.AckRequest")
	proto.RegisterType((*SynAck)(nil), "api.SynAck")
	proto.RegisterType((*PeerDigest)(nil), "api.PeerDigest")
	proto.RegisterType((*PeerDetailed)(nil), "api.PeerDetailed")
	proto.RegisterType((*PeerDetailed_PeerState)(nil), "api.PeerDetailed.PeerState")
	proto.RegisterType((*PeerDetailed_PeerState_GeoCoordinates)(nil), "api.PeerDetailed.PeerState.GeoCoordinates")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscoveryClient is the client API for Discovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryClient interface {
	Synchronize(ctx context.Context, in *SynRequest, opts ...grpc.CallOption) (*SynAck, error)
	Acknowledge(ctx context.Context, in *AckRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type discoveryClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryClient(cc *grpc.ClientConn) DiscoveryClient {
	return &discoveryClient{cc}
}

func (c *discoveryClient) Synchronize(ctx context.Context, in *SynRequest, opts ...grpc.CallOption) (*SynAck, error) {
	out := new(SynAck)
	err := c.cc.Invoke(ctx, "/api.Discovery/Synchronize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryClient) Acknowledge(ctx context.Context, in *AckRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.Discovery/Acknowledge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoveryServer is the server API for Discovery service.
type DiscoveryServer interface {
	Synchronize(context.Context, *SynRequest) (*SynAck, error)
	Acknowledge(context.Context, *AckRequest) (*empty.Empty, error)
}

func RegisterDiscoveryServer(s *grpc.Server, srv DiscoveryServer) {
	s.RegisterService(&_Discovery_serviceDesc, srv)
}

func _Discovery_Synchronize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SynRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).Synchronize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Discovery/Synchronize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).Synchronize(ctx, req.(*SynRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discovery_Acknowledge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).Acknowledge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Discovery/Acknowledge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).Acknowledge(ctx, req.(*AckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Discovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Discovery",
	HandlerType: (*DiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Synchronize",
			Handler:    _Discovery_Synchronize_Handler,
		},
		{
			MethodName: "Acknowledge",
			Handler:    _Discovery_Acknowledge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discovery.proto",
}

func init() { proto.RegisterFile("discovery.proto", fileDescriptor_1e7ff60feb39c8d0) }

var fileDescriptor_1e7ff60feb39c8d0 = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x5d, 0x92, 0xb6, 0x5b, 0x6e, 0x4b, 0x5b, 0xfc, 0x80, 0xa2, 0x8e, 0x87, 0x2a, 0x42, 0x53,
	0x05, 0x5a, 0x27, 0x3a, 0x1e, 0xe0, 0x05, 0xa9, 0xdb, 0xd8, 0x34, 0x6d, 0xda, 0x22, 0x97, 0xf1,
	0xee, 0xa5, 0x97, 0x62, 0x35, 0xb3, 0x83, 0xe3, 0x6c, 0x0a, 0x7f, 0xc2, 0x33, 0xdf, 0xc0, 0x3f,
	0xf0, 0x1f, 0xfc, 0x08, 0x8a, 0x9b, 0x34, 0xdd, 0x98, 0xc6, 0x03, 0x82, 0xb7, 0xeb, 0xe3, 0x73,
	0xed, 0x73, 0x8f, 0xaf, 0x2f, 0x74, 0xa6, 0x3c, 0x09, 0xe5, 0x35, 0xaa, 0x6c, 0x18, 0x2b, 0xa9,
	0x25, 0x71, 0x58, 0xcc, 0x7b, 0x9b, 0x33, 0x29, 0x67, 0x11, 0xee, 0x18, 0xe8, 0x32, 0xfd, 0xb8,
	0x83, 0x57, 0xb1, 0x2e, 0x18, 0xfe, 0x57, 0x0b, 0x60, 0x92, 0x09, 0x8a, 0x9f, 0x53, 0x4c, 0x34,
	0xd9, 0x06, 0xf7, 0x58, 0x70, 0xcd, 0x99, 0x96, 0xca, 0xb3, 0xfa, 0xd6, 0xa0, 0x39, 0xea, 0x0c,
	0x59, 0xcc, 0x87, 0x01, 0xa2, 0x3a, 0xe0, 0x33, 0x4c, 0x34, 0xad, 0x18, 0xe4, 0x05, 0x6c, 0x50,
	0x0c, 0x91, 0x5f, 0xa3, 0xf2, 0xec, 0xfb, 0xd9, 0x4b, 0x02, 0xd9, 0x01, 0x38, 0x11, 0xf2, 0x46,
	0xe4, 0x9b, 0x89, 0xe7, 0xf4, 0x9d, 0xfb, 0xe8, 0x2b, 0x14, 0xff, 0x9b, 0x05, 0x30, 0x0e, 0xe7,
	0xff, 0x43, 0xdb, 0x1b, 0x68, 0x17, 0xd7, 0xe0, 0x74, 0x55, 0xdf, 0xe3, 0x2a, 0x05, 0x35, 0xe3,
	0x11, 0x4e, 0xe9, 0x1d, 0xa2, 0xff, 0xc3, 0x82, 0xc6, 0x24, 0x13, 0xe3, 0x70, 0xfe, 0x4f, 0x15,
	0x6e, 0xc3, 0xc6, 0x19, 0xde, 0xfc, 0x41, 0xdb, 0x92, 0x42, 0x76, 0xa1, 0x75, 0x21, 0xe6, 0x95,
	0xdd, 0xb5, 0xfb, 0xed, 0xbe, 0x45, 0xf2, 0xcf, 0x00, 0xaa, 0x3d, 0xf2, 0x14, 0xdc, 0x20, 0xbd,
	0x8c, 0x78, 0x78, 0x82, 0x99, 0xa9, 0xa6, 0x45, 0x2b, 0x80, 0xb4, 0xc1, 0x3e, 0x0e, 0x8c, 0x6c,
	0x97, 0xda, 0xc7, 0x01, 0x21, 0x50, 0x0b, 0xa4, 0xd2, 0x9e, 0xd3, 0xb7, 0x06, 0x75, 0x6a, 0x62,
	0xff, 0x67, 0x0d, 0x5a, 0xab, 0xfa, 0xfe, 0xfe, 0x48, 0xb2, 0x05, 0xed, 0x23, 0x14, 0xa8, 0x98,
	0xe6, 0x52, 0xbc, 0xe7, 0x57, 0xe8, 0xd5, 0xfa, 0xd6, 0xc0, 0xa1, 0x77, 0x50, 0xf2, 0x12, 0xea,
	0x13, 0xcd, 0x34, 0x7a, 0x75, 0x63, 0xec, 0xe6, 0x6f, 0x5e, 0x99, 0x85, 0xa1, 0xd0, 0x05, 0xb3,
	0xf7, 0xdd, 0x01, 0x77, 0x09, 0x92, 0xb7, 0xd0, 0xc8, 0x83, 0x34, 0x31, 0x3a, 0xdb, 0xa3, 0xad,
	0x07, 0x4e, 0x58, 0x46, 0x69, 0x42, 0x8b, 0x2c, 0xe2, 0xc1, 0xfa, 0x7e, 0x70, 0x71, 0x2a, 0xd9,
	0xb4, 0xa8, 0xa8, 0x5c, 0x92, 0x67, 0xf0, 0xe8, 0x50, 0x21, 0x1e, 0xf0, 0x64, 0x3e, 0x89, 0x59,
	0x88, 0xa6, 0x3e, 0x9b, 0xde, 0x06, 0xf3, 0xfc, 0x0f, 0xa8, 0x12, 0x2e, 0x85, 0xa9, 0xd0, 0xa5,
	0xe5, 0x92, 0x9c, 0x42, 0xf3, 0x08, 0x65, 0x20, 0x13, 0x9e, 0x57, 0x5b, 0x14, 0xf8, 0xfc, 0x21,
	0x79, 0x47, 0x28, 0xf7, 0xa5, 0x54, 0x53, 0x2e, 0x98, 0xc6, 0x84, 0xae, 0xa6, 0x9b, 0x27, 0x19,
	0x05, 0x87, 0x2c, 0xcc, 0x7b, 0xb6, 0x61, 0x9c, 0xae, 0x00, 0x32, 0x80, 0xce, 0x41, 0x31, 0x53,
	0xca, 0x8f, 0xb1, 0x6e, 0x38, 0x77, 0xe1, 0xde, 0xab, 0xfc, 0x61, 0x56, 0xaf, 0x21, 0x5d, 0x70,
	0x4e, 0x99, 0x36, 0xf6, 0xd9, 0x34, 0x0f, 0x0d, 0x22, 0x85, 0xf1, 0x23, 0x47, 0xa4, 0xf0, 0xf7,
	0x16, 0x1d, 0x57, 0x78, 0xe6, 0x42, 0xfd, 0x90, 0xa5, 0x91, 0xee, 0xae, 0x91, 0x2e, 0xb4, 0xf6,
	0xa4, 0xd4, 0x89, 0x56, 0x2c, 0xe6, 0x62, 0xd6, 0xb5, 0x48, 0x03, 0xec, 0xf3, 0x79, 0xd7, 0x26,
	0x1d, 0x68, 0x4e, 0xb4, 0x54, 0x6c, 0x86, 0xe7, 0x22, 0xca, 0xba, 0xce, 0x48, 0x83, 0x5b, 0x8a,
	0xc9, 0xc8, 0x36, 0x34, 0x27, 0x99, 0x08, 0x3f, 0x29, 0x29, 0xf8, 0x17, 0x24, 0x8b, 0x86, 0xaf,
	0x06, 0x5c, 0xaf, 0x59, 0x02, 0xe3, 0x70, 0xee, 0xaf, 0x91, 0xd7, 0xd0, 0x1c, 0x87, 0xf9, 0x0f,
	0x88, 0x70, 0x3a, 0x2b, 0xe9, 0xd5, 0xcc, 0xe9, 0x3d, 0x19, 0x2e, 0x86, 0xe7, 0xb0, 0x1c, 0x9e,
	0xc3, 0x77, 0xf9, 0xf0, 0xf4, 0xd7, 0x2e, 0x1b, 0x06, 0xd9, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff,
	0x28, 0x8f, 0x21, 0xef, 0x74, 0x05, 0x00, 0x00,
}
