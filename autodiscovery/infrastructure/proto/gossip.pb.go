// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gossip.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Peer_PeerState_PeerStatus int32

const (
	Peer_PeerState_Fault        Peer_PeerState_PeerStatus = 0
	Peer_PeerState_Bootstraping Peer_PeerState_PeerStatus = 1
	Peer_PeerState_Ok           Peer_PeerState_PeerStatus = 2
	Peer_PeerState_StorageOnly  Peer_PeerState_PeerStatus = 3
)

var Peer_PeerState_PeerStatus_name = map[int32]string{
	0: "Fault",
	1: "Bootstraping",
	2: "Ok",
	3: "StorageOnly",
}
var Peer_PeerState_PeerStatus_value = map[string]int32{
	"Fault":        0,
	"Bootstraping": 1,
	"Ok":           2,
	"StorageOnly":  3,
}

func (x Peer_PeerState_PeerStatus) String() string {
	return proto.EnumName(Peer_PeerState_PeerStatus_name, int32(x))
}
func (Peer_PeerState_PeerStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gossip_86425ba5f261e7c7, []int{3, 0, 0}
}

type SynRequest struct {
	Sender               *Peer    `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	KnownPeers           []*Peer  `protobuf:"bytes,2,rep,name=KnownPeers,proto3" json:"KnownPeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SynRequest) Reset()         { *m = SynRequest{} }
func (m *SynRequest) String() string { return proto.CompactTextString(m) }
func (*SynRequest) ProtoMessage()    {}
func (*SynRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_86425ba5f261e7c7, []int{0}
}
func (m *SynRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynRequest.Unmarshal(m, b)
}
func (m *SynRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynRequest.Marshal(b, m, deterministic)
}
func (dst *SynRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynRequest.Merge(dst, src)
}
func (m *SynRequest) XXX_Size() int {
	return xxx_messageInfo_SynRequest.Size(m)
}
func (m *SynRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SynRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SynRequest proto.InternalMessageInfo

func (m *SynRequest) GetSender() *Peer {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *SynRequest) GetKnownPeers() []*Peer {
	if m != nil {
		return m.KnownPeers
	}
	return nil
}

type AckRequest struct {
	DetailedKnownPeers   []*Peer  `protobuf:"bytes,1,rep,name=DetailedKnownPeers,proto3" json:"DetailedKnownPeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckRequest) Reset()         { *m = AckRequest{} }
func (m *AckRequest) String() string { return proto.CompactTextString(m) }
func (*AckRequest) ProtoMessage()    {}
func (*AckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_86425ba5f261e7c7, []int{1}
}
func (m *AckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckRequest.Unmarshal(m, b)
}
func (m *AckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckRequest.Marshal(b, m, deterministic)
}
func (dst *AckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckRequest.Merge(dst, src)
}
func (m *AckRequest) XXX_Size() int {
	return xxx_messageInfo_AckRequest.Size(m)
}
func (m *AckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AckRequest proto.InternalMessageInfo

func (m *AckRequest) GetDetailedKnownPeers() []*Peer {
	if m != nil {
		return m.DetailedKnownPeers
	}
	return nil
}

type SynAck struct {
	NewPeers             []*Peer  `protobuf:"bytes,1,rep,name=NewPeers,proto3" json:"NewPeers,omitempty"`
	DetailPeersRequested []*Peer  `protobuf:"bytes,2,rep,name=DetailPeersRequested,proto3" json:"DetailPeersRequested,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SynAck) Reset()         { *m = SynAck{} }
func (m *SynAck) String() string { return proto.CompactTextString(m) }
func (*SynAck) ProtoMessage()    {}
func (*SynAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_86425ba5f261e7c7, []int{2}
}
func (m *SynAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynAck.Unmarshal(m, b)
}
func (m *SynAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynAck.Marshal(b, m, deterministic)
}
func (dst *SynAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynAck.Merge(dst, src)
}
func (m *SynAck) XXX_Size() int {
	return xxx_messageInfo_SynAck.Size(m)
}
func (m *SynAck) XXX_DiscardUnknown() {
	xxx_messageInfo_SynAck.DiscardUnknown(m)
}

var xxx_messageInfo_SynAck proto.InternalMessageInfo

func (m *SynAck) GetNewPeers() []*Peer {
	if m != nil {
		return m.NewPeers
	}
	return nil
}

func (m *SynAck) GetDetailPeersRequested() []*Peer {
	if m != nil {
		return m.DetailPeersRequested
	}
	return nil
}

type Peer struct {
	PublicKey            []byte          `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	IP                   string          `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 int32           `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	GenerationTime       int64           `protobuf:"varint,4,opt,name=GenerationTime,proto3" json:"GenerationTime,omitempty"`
	State                *Peer_PeerState `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_86425ba5f261e7c7, []int{3}
}
func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (dst *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(dst, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *Peer) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *Peer) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Peer) GetGenerationTime() int64 {
	if m != nil {
		return m.GenerationTime
	}
	return 0
}

func (m *Peer) GetState() *Peer_PeerState {
	if m != nil {
		return m.State
	}
	return nil
}

type Peer_PeerState struct {
	Status               Peer_PeerState_PeerStatus      `protobuf:"varint,1,opt,name=Status,proto3,enum=proto.Peer_PeerState_PeerStatus" json:"Status,omitempty"`
	CPULoad              string                         `protobuf:"bytes,2,opt,name=CPULoad,proto3" json:"CPULoad,omitempty"`
	IOWaitRate           float32                        `protobuf:"fixed32,3,opt,name=IOWaitRate,proto3" json:"IOWaitRate,omitempty"`
	FreeDiskSpace        float32                        `protobuf:"fixed32,4,opt,name=FreeDiskSpace,proto3" json:"FreeDiskSpace,omitempty"`
	Version              string                         `protobuf:"bytes,5,opt,name=Version,proto3" json:"Version,omitempty"`
	GeoPosition          *Peer_PeerState_GeoCoordinates `protobuf:"bytes,6,opt,name=GeoPosition,proto3" json:"GeoPosition,omitempty"`
	P2PFactor            int32                          `protobuf:"varint,7,opt,name=P2PFactor,proto3" json:"P2PFactor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Peer_PeerState) Reset()         { *m = Peer_PeerState{} }
func (m *Peer_PeerState) String() string { return proto.CompactTextString(m) }
func (*Peer_PeerState) ProtoMessage()    {}
func (*Peer_PeerState) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_86425ba5f261e7c7, []int{3, 0}
}
func (m *Peer_PeerState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer_PeerState.Unmarshal(m, b)
}
func (m *Peer_PeerState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer_PeerState.Marshal(b, m, deterministic)
}
func (dst *Peer_PeerState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer_PeerState.Merge(dst, src)
}
func (m *Peer_PeerState) XXX_Size() int {
	return xxx_messageInfo_Peer_PeerState.Size(m)
}
func (m *Peer_PeerState) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer_PeerState.DiscardUnknown(m)
}

var xxx_messageInfo_Peer_PeerState proto.InternalMessageInfo

func (m *Peer_PeerState) GetStatus() Peer_PeerState_PeerStatus {
	if m != nil {
		return m.Status
	}
	return Peer_PeerState_Fault
}

func (m *Peer_PeerState) GetCPULoad() string {
	if m != nil {
		return m.CPULoad
	}
	return ""
}

func (m *Peer_PeerState) GetIOWaitRate() float32 {
	if m != nil {
		return m.IOWaitRate
	}
	return 0
}

func (m *Peer_PeerState) GetFreeDiskSpace() float32 {
	if m != nil {
		return m.FreeDiskSpace
	}
	return 0
}

func (m *Peer_PeerState) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Peer_PeerState) GetGeoPosition() *Peer_PeerState_GeoCoordinates {
	if m != nil {
		return m.GeoPosition
	}
	return nil
}

func (m *Peer_PeerState) GetP2PFactor() int32 {
	if m != nil {
		return m.P2PFactor
	}
	return 0
}

type Peer_PeerState_GeoCoordinates struct {
	Lat                  float32  `protobuf:"fixed32,1,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Lon                  float32  `protobuf:"fixed32,2,opt,name=Lon,proto3" json:"Lon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Peer_PeerState_GeoCoordinates) Reset()         { *m = Peer_PeerState_GeoCoordinates{} }
func (m *Peer_PeerState_GeoCoordinates) String() string { return proto.CompactTextString(m) }
func (*Peer_PeerState_GeoCoordinates) ProtoMessage()    {}
func (*Peer_PeerState_GeoCoordinates) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_86425ba5f261e7c7, []int{3, 0, 0}
}
func (m *Peer_PeerState_GeoCoordinates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer_PeerState_GeoCoordinates.Unmarshal(m, b)
}
func (m *Peer_PeerState_GeoCoordinates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer_PeerState_GeoCoordinates.Marshal(b, m, deterministic)
}
func (dst *Peer_PeerState_GeoCoordinates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer_PeerState_GeoCoordinates.Merge(dst, src)
}
func (m *Peer_PeerState_GeoCoordinates) XXX_Size() int {
	return xxx_messageInfo_Peer_PeerState_GeoCoordinates.Size(m)
}
func (m *Peer_PeerState_GeoCoordinates) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer_PeerState_GeoCoordinates.DiscardUnknown(m)
}

var xxx_messageInfo_Peer_PeerState_GeoCoordinates proto.InternalMessageInfo

func (m *Peer_PeerState_GeoCoordinates) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Peer_PeerState_GeoCoordinates) GetLon() float32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func init() {
	proto.RegisterType((*SynRequest)(nil), "proto.SynRequest")
	proto.RegisterType((*AckRequest)(nil), "proto.AckRequest")
	proto.RegisterType((*SynAck)(nil), "proto.SynAck")
	proto.RegisterType((*Peer)(nil), "proto.Peer")
	proto.RegisterType((*Peer_PeerState)(nil), "proto.Peer.PeerState")
	proto.RegisterType((*Peer_PeerState_GeoCoordinates)(nil), "proto.Peer.PeerState.GeoCoordinates")
	proto.RegisterEnum("proto.Peer_PeerState_PeerStatus", Peer_PeerState_PeerStatus_name, Peer_PeerState_PeerStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GossipClient is the client API for Gossip service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GossipClient interface {
	Synchronize(ctx context.Context, in *SynRequest, opts ...grpc.CallOption) (*SynAck, error)
	Acknowledge(ctx context.Context, in *AckRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type gossipClient struct {
	cc *grpc.ClientConn
}

func NewGossipClient(cc *grpc.ClientConn) GossipClient {
	return &gossipClient{cc}
}

func (c *gossipClient) Synchronize(ctx context.Context, in *SynRequest, opts ...grpc.CallOption) (*SynAck, error) {
	out := new(SynAck)
	err := c.cc.Invoke(ctx, "/proto.Gossip/Synchronize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gossipClient) Acknowledge(ctx context.Context, in *AckRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.Gossip/Acknowledge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GossipServer is the server API for Gossip service.
type GossipServer interface {
	Synchronize(context.Context, *SynRequest) (*SynAck, error)
	Acknowledge(context.Context, *AckRequest) (*empty.Empty, error)
}

func RegisterGossipServer(s *grpc.Server, srv GossipServer) {
	s.RegisterService(&_Gossip_serviceDesc, srv)
}

func _Gossip_Synchronize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SynRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServer).Synchronize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gossip/Synchronize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServer).Synchronize(ctx, req.(*SynRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gossip_Acknowledge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServer).Acknowledge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gossip/Acknowledge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServer).Acknowledge(ctx, req.(*AckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gossip_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Gossip",
	HandlerType: (*GossipServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Synchronize",
			Handler:    _Gossip_Synchronize_Handler,
		},
		{
			MethodName: "Acknowledge",
			Handler:    _Gossip_Acknowledge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gossip.proto",
}

func init() { proto.RegisterFile("gossip.proto", fileDescriptor_gossip_86425ba5f261e7c7) }

var fileDescriptor_gossip_86425ba5f261e7c7 = []byte{
	// 560 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x9d, 0xc4, 0x25, 0x93, 0xb6, 0x84, 0x11, 0x20, 0x2b, 0x20, 0x14, 0x99, 0x0a, 0x22,
	0x55, 0x4a, 0x45, 0xe0, 0x80, 0xe0, 0x80, 0xd2, 0x96, 0x44, 0x51, 0x2b, 0x6a, 0xad, 0xf9, 0xb8,
	0x21, 0x6d, 0x9d, 0x21, 0xac, 0x92, 0xee, 0x86, 0xf5, 0x5a, 0x91, 0xf9, 0x33, 0xfc, 0x14, 0xfe,
	0x1a, 0xf2, 0x3a, 0xa9, 0x4d, 0x09, 0x17, 0x7b, 0xe6, 0xcd, 0x9b, 0xd1, 0xbc, 0x59, 0x3d, 0xd8,
	0x9b, 0xa9, 0x24, 0x11, 0xcb, 0xfe, 0x52, 0x2b, 0xa3, 0xb0, 0x61, 0x7f, 0x9d, 0x47, 0x33, 0xa5,
	0x66, 0x0b, 0x3a, 0xb6, 0xd9, 0x55, 0xfa, 0xed, 0x98, 0xae, 0x97, 0x26, 0x2b, 0x38, 0xc1, 0x57,
	0x80, 0x28, 0x93, 0x8c, 0x7e, 0xa4, 0x94, 0x18, 0x7c, 0x0a, 0x5e, 0x44, 0x72, 0x4a, 0xda, 0x77,
	0xba, 0x4e, 0xaf, 0x35, 0x68, 0x15, 0xac, 0x7e, 0x48, 0xa4, 0xd9, 0xba, 0x84, 0x47, 0x00, 0xe7,
	0x52, 0xad, 0x64, 0x0e, 0x26, 0xbe, 0xdb, 0xad, 0xdd, 0x26, 0x56, 0xca, 0xc1, 0x04, 0x60, 0x18,
	0xcf, 0x37, 0xf3, 0xdf, 0x02, 0x9e, 0x91, 0xe1, 0x62, 0x41, 0xd3, 0xca, 0x08, 0xe7, 0xdf, 0x11,
	0x5b, 0x68, 0x81, 0x06, 0x2f, 0xca, 0xe4, 0x30, 0x9e, 0xe3, 0x73, 0xb8, 0xf3, 0x81, 0x56, 0xff,
	0x6d, 0xbe, 0x29, 0xe2, 0x3b, 0xb8, 0x5f, 0x0c, 0xb2, 0xe9, 0x7a, 0x0b, 0x9a, 0x6e, 0x5b, 0x7a,
	0x2b, 0x31, 0xf8, 0x5d, 0x87, 0x7a, 0x0e, 0xe1, 0x63, 0x68, 0x86, 0xe9, 0xd5, 0x42, 0xc4, 0xe7,
	0x94, 0xd9, 0xe3, 0xec, 0xb1, 0x12, 0xc0, 0x03, 0x70, 0x27, 0xa1, 0xef, 0x76, 0x9d, 0x5e, 0x93,
	0xb9, 0x93, 0x10, 0x11, 0xea, 0xa1, 0xd2, 0xc6, 0xaf, 0x75, 0x9d, 0x5e, 0x83, 0xd9, 0x18, 0x9f,
	0xc1, 0xc1, 0x98, 0x24, 0x69, 0x6e, 0x84, 0x92, 0x1f, 0xc5, 0x35, 0xf9, 0xf5, 0xae, 0xd3, 0xab,
	0xb1, 0x5b, 0x28, 0x1e, 0x41, 0x23, 0x32, 0xdc, 0x90, 0xdf, 0xb0, 0x4f, 0xf0, 0xa0, 0xb2, 0xa4,
	0xfd, 0xd8, 0x22, 0x2b, 0x38, 0x9d, 0x5f, 0x35, 0x68, 0xde, 0x80, 0xf8, 0x1a, 0xbc, 0x3c, 0x48,
	0x13, 0xbb, 0xe1, 0xc1, 0xa0, 0xbb, 0xb5, 0xf7, 0x26, 0x4a, 0x13, 0xb6, 0xe6, 0xa3, 0x0f, 0xbb,
	0xa7, 0xe1, 0xa7, 0x0b, 0xc5, 0xa7, 0x6b, 0x15, 0x9b, 0x14, 0x9f, 0x00, 0x4c, 0x2e, 0xbf, 0x70,
	0x61, 0x58, 0xbe, 0x53, 0x2e, 0xc8, 0x65, 0x15, 0x04, 0x0f, 0x61, 0x7f, 0xa4, 0x89, 0xce, 0x44,
	0x32, 0x8f, 0x96, 0x3c, 0x2e, 0x54, 0xb9, 0xec, 0x6f, 0x30, 0x9f, 0xff, 0x99, 0x74, 0x22, 0x94,
	0xb4, 0xb2, 0x9a, 0x6c, 0x93, 0xe2, 0x08, 0x5a, 0x63, 0x52, 0xa1, 0x4a, 0x44, 0x7e, 0x01, 0xdf,
	0xb3, 0xa2, 0x0f, 0xb7, 0x2f, 0x3e, 0x26, 0x75, 0xaa, 0x94, 0x9e, 0x0a, 0xc9, 0x0d, 0x25, 0xac,
	0xda, 0x68, 0x1f, 0x68, 0x10, 0x8e, 0x78, 0x6c, 0x94, 0xf6, 0x77, 0xed, 0xdd, 0x4b, 0xa0, 0xf3,
	0x2a, 0x3f, 0x7e, 0xb5, 0x19, 0xdb, 0x50, 0xbb, 0xe0, 0xc6, 0x1e, 0xca, 0x65, 0x79, 0x68, 0x11,
	0x25, 0xad, 0xfe, 0x1c, 0x51, 0x32, 0x38, 0x01, 0x28, 0x6f, 0x85, 0x4d, 0x68, 0x8c, 0x78, 0xba,
	0x30, 0xed, 0x1d, 0x6c, 0xc3, 0xde, 0x89, 0x52, 0x26, 0x31, 0x9a, 0x2f, 0x85, 0x9c, 0xb5, 0x1d,
	0xf4, 0xc0, 0xbd, 0x9c, 0xb7, 0x5d, 0xbc, 0x0b, 0xad, 0xc8, 0x28, 0xcd, 0x67, 0x74, 0x29, 0x17,
	0x59, 0xbb, 0x36, 0x58, 0x81, 0x37, 0xb6, 0xa6, 0xc4, 0x17, 0xd0, 0x8a, 0x32, 0x19, 0x7f, 0xd7,
	0x4a, 0x8a, 0x9f, 0x84, 0xf7, 0xd6, 0x1a, 0x4b, 0xfb, 0x75, 0xf6, 0x4b, 0x68, 0x18, 0xcf, 0x83,
	0x1d, 0x7c, 0x03, 0xad, 0x61, 0x3c, 0x97, 0x6a, 0xb5, 0xa0, 0xe9, 0xac, 0x6c, 0x29, 0x1d, 0xd5,
	0x79, 0xd8, 0x2f, 0xdc, 0xdd, 0xdf, 0xb8, 0xbb, 0xff, 0x3e, 0x77, 0x77, 0xb0, 0x73, 0xe5, 0x59,
	0xe4, 0xe5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0xc0, 0xb0, 0x01, 0x14, 0x04, 0x00, 0x00,
}
