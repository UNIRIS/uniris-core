// Code generated by protoc-gen-go. DO NOT EDIT.
// source: external.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Validation_ValidationStatus int32

const (
	Validation_OK Validation_ValidationStatus = 0
	Validation_KO Validation_ValidationStatus = 1
)

var Validation_ValidationStatus_name = map[int32]string{
	0: "OK",
	1: "KO",
}
var Validation_ValidationStatus_value = map[string]int32{
	"OK": 0,
	"KO": 1,
}

func (x Validation_ValidationStatus) String() string {
	return proto.EnumName(Validation_ValidationStatus_name, int32(x))
}
func (Validation_ValidationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{12, 0}
}

type KeychainLeadRequest struct {
	TransactionHash       string     `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	ValidatorPeerIPs      []string   `protobuf:"bytes,2,rep,name=ValidatorPeerIPs,proto3" json:"ValidatorPeerIPs,omitempty"`
	EncryptedKeychainData string     `protobuf:"bytes,3,opt,name=EncryptedKeychainData,proto3" json:"EncryptedKeychainData,omitempty"`
	SignatureKeychainData *Signature `protobuf:"bytes,4,opt,name=SignatureKeychainData,proto3" json:"SignatureKeychainData,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}   `json:"-"`
	XXX_unrecognized      []byte     `json:"-"`
	XXX_sizecache         int32      `json:"-"`
}

func (m *KeychainLeadRequest) Reset()         { *m = KeychainLeadRequest{} }
func (m *KeychainLeadRequest) String() string { return proto.CompactTextString(m) }
func (*KeychainLeadRequest) ProtoMessage()    {}
func (*KeychainLeadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{0}
}
func (m *KeychainLeadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeychainLeadRequest.Unmarshal(m, b)
}
func (m *KeychainLeadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeychainLeadRequest.Marshal(b, m, deterministic)
}
func (dst *KeychainLeadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeychainLeadRequest.Merge(dst, src)
}
func (m *KeychainLeadRequest) XXX_Size() int {
	return xxx_messageInfo_KeychainLeadRequest.Size(m)
}
func (m *KeychainLeadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeychainLeadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeychainLeadRequest proto.InternalMessageInfo

func (m *KeychainLeadRequest) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *KeychainLeadRequest) GetValidatorPeerIPs() []string {
	if m != nil {
		return m.ValidatorPeerIPs
	}
	return nil
}

func (m *KeychainLeadRequest) GetEncryptedKeychainData() string {
	if m != nil {
		return m.EncryptedKeychainData
	}
	return ""
}

func (m *KeychainLeadRequest) GetSignatureKeychainData() *Signature {
	if m != nil {
		return m.SignatureKeychainData
	}
	return nil
}

type BiometricLeadRequest struct {
	TransactionHash      string     `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	ValidatorPeerIPs     []string   `protobuf:"bytes,2,rep,name=ValidatorPeerIPs,proto3" json:"ValidatorPeerIPs,omitempty"`
	EncryptedBioData     string     `protobuf:"bytes,3,opt,name=EncryptedBioData,proto3" json:"EncryptedBioData,omitempty"`
	SignatureBioData     *Signature `protobuf:"bytes,4,opt,name=SignatureBioData,proto3" json:"SignatureBioData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BiometricLeadRequest) Reset()         { *m = BiometricLeadRequest{} }
func (m *BiometricLeadRequest) String() string { return proto.CompactTextString(m) }
func (*BiometricLeadRequest) ProtoMessage()    {}
func (*BiometricLeadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{1}
}
func (m *BiometricLeadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiometricLeadRequest.Unmarshal(m, b)
}
func (m *BiometricLeadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiometricLeadRequest.Marshal(b, m, deterministic)
}
func (dst *BiometricLeadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiometricLeadRequest.Merge(dst, src)
}
func (m *BiometricLeadRequest) XXX_Size() int {
	return xxx_messageInfo_BiometricLeadRequest.Size(m)
}
func (m *BiometricLeadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BiometricLeadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BiometricLeadRequest proto.InternalMessageInfo

func (m *BiometricLeadRequest) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *BiometricLeadRequest) GetValidatorPeerIPs() []string {
	if m != nil {
		return m.ValidatorPeerIPs
	}
	return nil
}

func (m *BiometricLeadRequest) GetEncryptedBioData() string {
	if m != nil {
		return m.EncryptedBioData
	}
	return ""
}

func (m *BiometricLeadRequest) GetSignatureBioData() *Signature {
	if m != nil {
		return m.SignatureBioData
	}
	return nil
}

type KeychainValidationRequest struct {
	TransactionHash      string        `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	Data                 *KeychainData `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *KeychainValidationRequest) Reset()         { *m = KeychainValidationRequest{} }
func (m *KeychainValidationRequest) String() string { return proto.CompactTextString(m) }
func (*KeychainValidationRequest) ProtoMessage()    {}
func (*KeychainValidationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{2}
}
func (m *KeychainValidationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeychainValidationRequest.Unmarshal(m, b)
}
func (m *KeychainValidationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeychainValidationRequest.Marshal(b, m, deterministic)
}
func (dst *KeychainValidationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeychainValidationRequest.Merge(dst, src)
}
func (m *KeychainValidationRequest) XXX_Size() int {
	return xxx_messageInfo_KeychainValidationRequest.Size(m)
}
func (m *KeychainValidationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeychainValidationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeychainValidationRequest proto.InternalMessageInfo

func (m *KeychainValidationRequest) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *KeychainValidationRequest) GetData() *KeychainData {
	if m != nil {
		return m.Data
	}
	return nil
}

type BiometricValidationRequest struct {
	TransactionHash      string         `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	Data                 *BiometricData `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BiometricValidationRequest) Reset()         { *m = BiometricValidationRequest{} }
func (m *BiometricValidationRequest) String() string { return proto.CompactTextString(m) }
func (*BiometricValidationRequest) ProtoMessage()    {}
func (*BiometricValidationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{3}
}
func (m *BiometricValidationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiometricValidationRequest.Unmarshal(m, b)
}
func (m *BiometricValidationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiometricValidationRequest.Marshal(b, m, deterministic)
}
func (dst *BiometricValidationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiometricValidationRequest.Merge(dst, src)
}
func (m *BiometricValidationRequest) XXX_Size() int {
	return xxx_messageInfo_BiometricValidationRequest.Size(m)
}
func (m *BiometricValidationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BiometricValidationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BiometricValidationRequest proto.InternalMessageInfo

func (m *BiometricValidationRequest) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *BiometricValidationRequest) GetData() *BiometricData {
	if m != nil {
		return m.Data
	}
	return nil
}

type KeychainStorageRequest struct {
	TransactionHash      string        `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	Data                 *KeychainData `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Endorsement          *Endorsement  `protobuf:"bytes,4,opt,name=Endorsement,proto3" json:"Endorsement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *KeychainStorageRequest) Reset()         { *m = KeychainStorageRequest{} }
func (m *KeychainStorageRequest) String() string { return proto.CompactTextString(m) }
func (*KeychainStorageRequest) ProtoMessage()    {}
func (*KeychainStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{4}
}
func (m *KeychainStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeychainStorageRequest.Unmarshal(m, b)
}
func (m *KeychainStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeychainStorageRequest.Marshal(b, m, deterministic)
}
func (dst *KeychainStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeychainStorageRequest.Merge(dst, src)
}
func (m *KeychainStorageRequest) XXX_Size() int {
	return xxx_messageInfo_KeychainStorageRequest.Size(m)
}
func (m *KeychainStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeychainStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeychainStorageRequest proto.InternalMessageInfo

func (m *KeychainStorageRequest) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *KeychainStorageRequest) GetData() *KeychainData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *KeychainStorageRequest) GetEndorsement() *Endorsement {
	if m != nil {
		return m.Endorsement
	}
	return nil
}

type BiometricStorageRequest struct {
	TransactionHash      string         `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	Data                 *BiometricData `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Endorsement          *Endorsement   `protobuf:"bytes,3,opt,name=Endorsement,proto3" json:"Endorsement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BiometricStorageRequest) Reset()         { *m = BiometricStorageRequest{} }
func (m *BiometricStorageRequest) String() string { return proto.CompactTextString(m) }
func (*BiometricStorageRequest) ProtoMessage()    {}
func (*BiometricStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{5}
}
func (m *BiometricStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiometricStorageRequest.Unmarshal(m, b)
}
func (m *BiometricStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiometricStorageRequest.Marshal(b, m, deterministic)
}
func (dst *BiometricStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiometricStorageRequest.Merge(dst, src)
}
func (m *BiometricStorageRequest) XXX_Size() int {
	return xxx_messageInfo_BiometricStorageRequest.Size(m)
}
func (m *BiometricStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BiometricStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BiometricStorageRequest proto.InternalMessageInfo

func (m *BiometricStorageRequest) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *BiometricStorageRequest) GetData() *BiometricData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BiometricStorageRequest) GetEndorsement() *Endorsement {
	if m != nil {
		return m.Endorsement
	}
	return nil
}

type LockRequest struct {
	TransactionHash      string   `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	MasterRobotKey       string   `protobuf:"bytes,2,opt,name=MasterRobotKey,proto3" json:"MasterRobotKey,omitempty"`
	Signature            string   `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockRequest) Reset()         { *m = LockRequest{} }
func (m *LockRequest) String() string { return proto.CompactTextString(m) }
func (*LockRequest) ProtoMessage()    {}
func (*LockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{6}
}
func (m *LockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockRequest.Unmarshal(m, b)
}
func (m *LockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockRequest.Marshal(b, m, deterministic)
}
func (dst *LockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockRequest.Merge(dst, src)
}
func (m *LockRequest) XXX_Size() int {
	return xxx_messageInfo_LockRequest.Size(m)
}
func (m *LockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockRequest proto.InternalMessageInfo

func (m *LockRequest) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *LockRequest) GetMasterRobotKey() string {
	if m != nil {
		return m.MasterRobotKey
	}
	return ""
}

func (m *LockRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type KeychainData struct {
	CipherAddrRobot      string     `protobuf:"bytes,1,opt,name=CipherAddrRobot,proto3" json:"CipherAddrRobot,omitempty"`
	CipherWallet         string     `protobuf:"bytes,2,opt,name=CipherWallet,proto3" json:"CipherWallet,omitempty"`
	PersonPubk           string     `protobuf:"bytes,3,opt,name=PersonPubk,proto3" json:"PersonPubk,omitempty"`
	BiodPubk             string     `protobuf:"bytes,4,opt,name=BiodPubk,proto3" json:"BiodPubk,omitempty"`
	Signature            *Signature `protobuf:"bytes,5,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KeychainData) Reset()         { *m = KeychainData{} }
func (m *KeychainData) String() string { return proto.CompactTextString(m) }
func (*KeychainData) ProtoMessage()    {}
func (*KeychainData) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{7}
}
func (m *KeychainData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeychainData.Unmarshal(m, b)
}
func (m *KeychainData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeychainData.Marshal(b, m, deterministic)
}
func (dst *KeychainData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeychainData.Merge(dst, src)
}
func (m *KeychainData) XXX_Size() int {
	return xxx_messageInfo_KeychainData.Size(m)
}
func (m *KeychainData) XXX_DiscardUnknown() {
	xxx_messageInfo_KeychainData.DiscardUnknown(m)
}

var xxx_messageInfo_KeychainData proto.InternalMessageInfo

func (m *KeychainData) GetCipherAddrRobot() string {
	if m != nil {
		return m.CipherAddrRobot
	}
	return ""
}

func (m *KeychainData) GetCipherWallet() string {
	if m != nil {
		return m.CipherWallet
	}
	return ""
}

func (m *KeychainData) GetPersonPubk() string {
	if m != nil {
		return m.PersonPubk
	}
	return ""
}

func (m *KeychainData) GetBiodPubk() string {
	if m != nil {
		return m.BiodPubk
	}
	return ""
}

func (m *KeychainData) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BiometricData struct {
	PersonHash           string     `protobuf:"bytes,1,opt,name=PersonHash,proto3" json:"PersonHash,omitempty"`
	CipherAddrRobot      string     `protobuf:"bytes,2,opt,name=CipherAddrRobot,proto3" json:"CipherAddrRobot,omitempty"`
	CipherAddrBio        string     `protobuf:"bytes,3,opt,name=CipherAddrBio,proto3" json:"CipherAddrBio,omitempty"`
	CipherAESKey         string     `protobuf:"bytes,4,opt,name=CipherAESKey,proto3" json:"CipherAESKey,omitempty"`
	PersonPubk           string     `protobuf:"bytes,5,opt,name=PersonPubk,proto3" json:"PersonPubk,omitempty"`
	BiodPubk             string     `protobuf:"bytes,6,opt,name=BiodPubk,proto3" json:"BiodPubk,omitempty"`
	Signature            *Signature `protobuf:"bytes,7,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BiometricData) Reset()         { *m = BiometricData{} }
func (m *BiometricData) String() string { return proto.CompactTextString(m) }
func (*BiometricData) ProtoMessage()    {}
func (*BiometricData) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{8}
}
func (m *BiometricData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiometricData.Unmarshal(m, b)
}
func (m *BiometricData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiometricData.Marshal(b, m, deterministic)
}
func (dst *BiometricData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiometricData.Merge(dst, src)
}
func (m *BiometricData) XXX_Size() int {
	return xxx_messageInfo_BiometricData.Size(m)
}
func (m *BiometricData) XXX_DiscardUnknown() {
	xxx_messageInfo_BiometricData.DiscardUnknown(m)
}

var xxx_messageInfo_BiometricData proto.InternalMessageInfo

func (m *BiometricData) GetPersonHash() string {
	if m != nil {
		return m.PersonHash
	}
	return ""
}

func (m *BiometricData) GetCipherAddrRobot() string {
	if m != nil {
		return m.CipherAddrRobot
	}
	return ""
}

func (m *BiometricData) GetCipherAddrBio() string {
	if m != nil {
		return m.CipherAddrBio
	}
	return ""
}

func (m *BiometricData) GetCipherAESKey() string {
	if m != nil {
		return m.CipherAESKey
	}
	return ""
}

func (m *BiometricData) GetPersonPubk() string {
	if m != nil {
		return m.PersonPubk
	}
	return ""
}

func (m *BiometricData) GetBiodPubk() string {
	if m != nil {
		return m.BiodPubk
	}
	return ""
}

func (m *BiometricData) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Endorsement struct {
	Timestamp            int64             `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	TransactionHash      string            `protobuf:"bytes,2,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	MasterValidation     *MasterValidation `protobuf:"bytes,3,opt,name=MasterValidation,proto3" json:"MasterValidation,omitempty"`
	Validations          []*Validation     `protobuf:"bytes,4,rep,name=Validations,proto3" json:"Validations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Endorsement) Reset()         { *m = Endorsement{} }
func (m *Endorsement) String() string { return proto.CompactTextString(m) }
func (*Endorsement) ProtoMessage()    {}
func (*Endorsement) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{9}
}
func (m *Endorsement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endorsement.Unmarshal(m, b)
}
func (m *Endorsement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endorsement.Marshal(b, m, deterministic)
}
func (dst *Endorsement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endorsement.Merge(dst, src)
}
func (m *Endorsement) XXX_Size() int {
	return xxx_messageInfo_Endorsement.Size(m)
}
func (m *Endorsement) XXX_DiscardUnknown() {
	xxx_messageInfo_Endorsement.DiscardUnknown(m)
}

var xxx_messageInfo_Endorsement proto.InternalMessageInfo

func (m *Endorsement) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Endorsement) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *Endorsement) GetMasterValidation() *MasterValidation {
	if m != nil {
		return m.MasterValidation
	}
	return nil
}

func (m *Endorsement) GetValidations() []*Validation {
	if m != nil {
		return m.Validations
	}
	return nil
}

type MasterValidation struct {
	ProofOfWorkRobotKey   string      `protobuf:"bytes,1,opt,name=ProofOfWorkRobotKey,proto3" json:"ProofOfWorkRobotKey,omitempty"`
	ProofOfWorkValidation *Validation `protobuf:"bytes,2,opt,name=ProofOfWorkValidation,proto3" json:"ProofOfWorkValidation,omitempty"`
	LastTransactionMiners []string    `protobuf:"bytes,3,rep,name=LastTransactionMiners,proto3" json:"LastTransactionMiners,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}    `json:"-"`
	XXX_unrecognized      []byte      `json:"-"`
	XXX_sizecache         int32       `json:"-"`
}

func (m *MasterValidation) Reset()         { *m = MasterValidation{} }
func (m *MasterValidation) String() string { return proto.CompactTextString(m) }
func (*MasterValidation) ProtoMessage()    {}
func (*MasterValidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{10}
}
func (m *MasterValidation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterValidation.Unmarshal(m, b)
}
func (m *MasterValidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterValidation.Marshal(b, m, deterministic)
}
func (dst *MasterValidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterValidation.Merge(dst, src)
}
func (m *MasterValidation) XXX_Size() int {
	return xxx_messageInfo_MasterValidation.Size(m)
}
func (m *MasterValidation) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterValidation.DiscardUnknown(m)
}

var xxx_messageInfo_MasterValidation proto.InternalMessageInfo

func (m *MasterValidation) GetProofOfWorkRobotKey() string {
	if m != nil {
		return m.ProofOfWorkRobotKey
	}
	return ""
}

func (m *MasterValidation) GetProofOfWorkValidation() *Validation {
	if m != nil {
		return m.ProofOfWorkValidation
	}
	return nil
}

func (m *MasterValidation) GetLastTransactionMiners() []string {
	if m != nil {
		return m.LastTransactionMiners
	}
	return nil
}

type ValidationResponse struct {
	Validation           *Validation `protobuf:"bytes,1,opt,name=Validation,proto3" json:"Validation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ValidationResponse) Reset()         { *m = ValidationResponse{} }
func (m *ValidationResponse) String() string { return proto.CompactTextString(m) }
func (*ValidationResponse) ProtoMessage()    {}
func (*ValidationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{11}
}
func (m *ValidationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationResponse.Unmarshal(m, b)
}
func (m *ValidationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationResponse.Marshal(b, m, deterministic)
}
func (dst *ValidationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationResponse.Merge(dst, src)
}
func (m *ValidationResponse) XXX_Size() int {
	return xxx_messageInfo_ValidationResponse.Size(m)
}
func (m *ValidationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationResponse proto.InternalMessageInfo

func (m *ValidationResponse) GetValidation() *Validation {
	if m != nil {
		return m.Validation
	}
	return nil
}

type Validation struct {
	Status               Validation_ValidationStatus `protobuf:"varint,1,opt,name=Status,proto3,enum=api.Validation_ValidationStatus" json:"Status,omitempty"`
	Timestamp            int64                       `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	PublicKey            string                      `protobuf:"bytes,3,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Signature            string                      `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Validation) Reset()         { *m = Validation{} }
func (m *Validation) String() string { return proto.CompactTextString(m) }
func (*Validation) ProtoMessage()    {}
func (*Validation) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_a6f86813610b0d43, []int{12}
}
func (m *Validation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Validation.Unmarshal(m, b)
}
func (m *Validation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Validation.Marshal(b, m, deterministic)
}
func (dst *Validation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Validation.Merge(dst, src)
}
func (m *Validation) XXX_Size() int {
	return xxx_messageInfo_Validation.Size(m)
}
func (m *Validation) XXX_DiscardUnknown() {
	xxx_messageInfo_Validation.DiscardUnknown(m)
}

var xxx_messageInfo_Validation proto.InternalMessageInfo

func (m *Validation) GetStatus() Validation_ValidationStatus {
	if m != nil {
		return m.Status
	}
	return Validation_OK
}

func (m *Validation) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Validation) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Validation) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func init() {
	proto.RegisterType((*KeychainLeadRequest)(nil), "api.KeychainLeadRequest")
	proto.RegisterType((*BiometricLeadRequest)(nil), "api.BiometricLeadRequest")
	proto.RegisterType((*KeychainValidationRequest)(nil), "api.KeychainValidationRequest")
	proto.RegisterType((*BiometricValidationRequest)(nil), "api.BiometricValidationRequest")
	proto.RegisterType((*KeychainStorageRequest)(nil), "api.KeychainStorageRequest")
	proto.RegisterType((*BiometricStorageRequest)(nil), "api.BiometricStorageRequest")
	proto.RegisterType((*LockRequest)(nil), "api.LockRequest")
	proto.RegisterType((*KeychainData)(nil), "api.KeychainData")
	proto.RegisterType((*BiometricData)(nil), "api.BiometricData")
	proto.RegisterType((*Endorsement)(nil), "api.Endorsement")
	proto.RegisterType((*MasterValidation)(nil), "api.MasterValidation")
	proto.RegisterType((*ValidationResponse)(nil), "api.ValidationResponse")
	proto.RegisterType((*Validation)(nil), "api.Validation")
	proto.RegisterEnum("api.Validation_ValidationStatus", Validation_ValidationStatus_name, Validation_ValidationStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExternalClient is the client API for External service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExternalClient interface {
	LockTransaction(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UnlockTransaction(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	LeadKeychainMining(ctx context.Context, in *KeychainLeadRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	LeadBiometricMining(ctx context.Context, in *BiometricLeadRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ValidateKeychain(ctx context.Context, in *KeychainValidationRequest, opts ...grpc.CallOption) (*ValidationResponse, error)
	ValidateBiometric(ctx context.Context, in *BiometricValidationRequest, opts ...grpc.CallOption) (*ValidationResponse, error)
	StoreKeychain(ctx context.Context, in *KeychainStorageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	StoreBiometric(ctx context.Context, in *BiometricStorageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type externalClient struct {
	cc *grpc.ClientConn
}

func NewExternalClient(cc *grpc.ClientConn) ExternalClient {
	return &externalClient{cc}
}

func (c *externalClient) LockTransaction(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.External/LockTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) UnlockTransaction(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.External/UnlockTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) LeadKeychainMining(ctx context.Context, in *KeychainLeadRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.External/LeadKeychainMining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) LeadBiometricMining(ctx context.Context, in *BiometricLeadRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.External/LeadBiometricMining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) ValidateKeychain(ctx context.Context, in *KeychainValidationRequest, opts ...grpc.CallOption) (*ValidationResponse, error) {
	out := new(ValidationResponse)
	err := c.cc.Invoke(ctx, "/api.External/ValidateKeychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) ValidateBiometric(ctx context.Context, in *BiometricValidationRequest, opts ...grpc.CallOption) (*ValidationResponse, error) {
	out := new(ValidationResponse)
	err := c.cc.Invoke(ctx, "/api.External/ValidateBiometric", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) StoreKeychain(ctx context.Context, in *KeychainStorageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.External/StoreKeychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalClient) StoreBiometric(ctx context.Context, in *BiometricStorageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.External/StoreBiometric", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExternalServer is the server API for External service.
type ExternalServer interface {
	LockTransaction(context.Context, *LockRequest) (*empty.Empty, error)
	UnlockTransaction(context.Context, *LockRequest) (*empty.Empty, error)
	LeadKeychainMining(context.Context, *KeychainLeadRequest) (*empty.Empty, error)
	LeadBiometricMining(context.Context, *BiometricLeadRequest) (*empty.Empty, error)
	ValidateKeychain(context.Context, *KeychainValidationRequest) (*ValidationResponse, error)
	ValidateBiometric(context.Context, *BiometricValidationRequest) (*ValidationResponse, error)
	StoreKeychain(context.Context, *KeychainStorageRequest) (*empty.Empty, error)
	StoreBiometric(context.Context, *BiometricStorageRequest) (*empty.Empty, error)
}

func RegisterExternalServer(s *grpc.Server, srv ExternalServer) {
	s.RegisterService(&_External_serviceDesc, srv)
}

func _External_LockTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).LockTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.External/LockTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).LockTransaction(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_UnlockTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).UnlockTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.External/UnlockTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).UnlockTransaction(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_LeadKeychainMining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeychainLeadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).LeadKeychainMining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.External/LeadKeychainMining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).LeadKeychainMining(ctx, req.(*KeychainLeadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_LeadBiometricMining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiometricLeadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).LeadBiometricMining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.External/LeadBiometricMining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).LeadBiometricMining(ctx, req.(*BiometricLeadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_ValidateKeychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeychainValidationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).ValidateKeychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.External/ValidateKeychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).ValidateKeychain(ctx, req.(*KeychainValidationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_ValidateBiometric_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiometricValidationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).ValidateBiometric(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.External/ValidateBiometric",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).ValidateBiometric(ctx, req.(*BiometricValidationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_StoreKeychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeychainStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).StoreKeychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.External/StoreKeychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).StoreKeychain(ctx, req.(*KeychainStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _External_StoreBiometric_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiometricStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServer).StoreBiometric(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.External/StoreBiometric",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServer).StoreBiometric(ctx, req.(*BiometricStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _External_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.External",
	HandlerType: (*ExternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LockTransaction",
			Handler:    _External_LockTransaction_Handler,
		},
		{
			MethodName: "UnlockTransaction",
			Handler:    _External_UnlockTransaction_Handler,
		},
		{
			MethodName: "LeadKeychainMining",
			Handler:    _External_LeadKeychainMining_Handler,
		},
		{
			MethodName: "LeadBiometricMining",
			Handler:    _External_LeadBiometricMining_Handler,
		},
		{
			MethodName: "ValidateKeychain",
			Handler:    _External_ValidateKeychain_Handler,
		},
		{
			MethodName: "ValidateBiometric",
			Handler:    _External_ValidateBiometric_Handler,
		},
		{
			MethodName: "StoreKeychain",
			Handler:    _External_StoreKeychain_Handler,
		},
		{
			MethodName: "StoreBiometric",
			Handler:    _External_StoreBiometric_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "external.proto",
}

func init() { proto.RegisterFile("external.proto", fileDescriptor_external_a6f86813610b0d43) }

var fileDescriptor_external_a6f86813610b0d43 = []byte{
	// 879 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x51, 0x8f, 0x1b, 0x35,
	0x10, 0xbe, 0x4d, 0xd2, 0xa3, 0x99, 0xdc, 0xe5, 0x72, 0x3e, 0xae, 0x4d, 0xd3, 0x53, 0x89, 0x56,
	0x80, 0xa2, 0x0a, 0xe5, 0x20, 0xf0, 0x80, 0x90, 0x10, 0xba, 0xd0, 0xa0, 0x42, 0x2e, 0x4a, 0xb4,
	0x29, 0xf4, 0xd9, 0x49, 0x7c, 0x39, 0xeb, 0x36, 0xf6, 0xe2, 0x75, 0x24, 0xf2, 0xc0, 0x4f, 0xe0,
	0x27, 0x20, 0x7e, 0x0b, 0x12, 0xe2, 0x85, 0x37, 0xc4, 0x7f, 0xe0, 0x6f, 0xa0, 0xf5, 0xee, 0x7a,
	0xed, 0xcd, 0x2a, 0xa4, 0xad, 0xfa, 0x94, 0xec, 0xe7, 0xf1, 0xcc, 0x37, 0x9f, 0xc7, 0x33, 0x86,
	0x3a, 0xf9, 0x49, 0x12, 0xc1, 0xb0, 0xdf, 0x0d, 0x04, 0x97, 0x1c, 0x95, 0x71, 0x40, 0x5b, 0x8f,
	0x97, 0x9c, 0x2f, 0x7d, 0x72, 0xa9, 0xa0, 0xd9, 0xfa, 0xe6, 0x92, 0xac, 0x02, 0xb9, 0x89, 0x2d,
	0x5a, 0x47, 0x73, 0xbe, 0x5a, 0x71, 0x16, 0x7f, 0xb9, 0xff, 0x3a, 0x70, 0x36, 0x24, 0x9b, 0xf9,
	0x2d, 0xa6, 0xec, 0x9a, 0xe0, 0x85, 0x47, 0x7e, 0x5c, 0x93, 0x50, 0xa2, 0x0e, 0x9c, 0xbc, 0x10,
	0x98, 0x85, 0x78, 0x2e, 0x29, 0x67, 0xcf, 0x71, 0x78, 0xdb, 0x74, 0xda, 0x4e, 0xa7, 0xea, 0xe5,
	0x61, 0xf4, 0x14, 0x1a, 0x3f, 0x60, 0x9f, 0x2e, 0xb0, 0xe4, 0x62, 0x42, 0x88, 0xf8, 0x76, 0x12,
	0x36, 0x4b, 0xed, 0x72, 0xa7, 0xea, 0x6d, 0xe1, 0xe8, 0x33, 0x38, 0x1f, 0xb0, 0xb9, 0xd8, 0x04,
	0x92, 0x2c, 0xd2, 0xa8, 0xcf, 0xb0, 0xc4, 0xcd, 0xb2, 0xf2, 0x5d, 0xbc, 0x88, 0x9e, 0xc1, 0xf9,
	0x94, 0x2e, 0x19, 0x96, 0x6b, 0x41, 0xac, 0x5d, 0x95, 0xb6, 0xd3, 0xa9, 0xf5, 0xea, 0x5d, 0x1c,
	0xd0, 0xae, 0xb6, 0xf0, 0x8a, 0x8d, 0xdd, 0x7f, 0x1c, 0x78, 0xb7, 0x4f, 0xf9, 0x8a, 0x48, 0x41,
	0xe7, 0x6f, 0x3f, 0xd5, 0xa7, 0xd0, 0xd0, 0xd9, 0xf4, 0x29, 0x37, 0xb2, 0xdc, 0xc2, 0xd1, 0x17,
	0xd0, 0xd0, 0x9c, 0x53, 0xdb, 0xe2, 0xdc, 0xb6, 0xec, 0x5c, 0x1f, 0x1e, 0xa5, 0x69, 0x26, 0x1c,
	0x28, 0x67, 0xaf, 0x9e, 0xda, 0x07, 0x50, 0x51, 0x61, 0x4b, 0x2a, 0xec, 0xa9, 0x0a, 0x6b, 0xca,
	0xe7, 0xa9, 0x65, 0x97, 0x41, 0x4b, 0x6b, 0xf8, 0x26, 0xe1, 0x3e, 0xb4, 0xc2, 0x21, 0x15, 0x4e,
	0x3b, 0x36, 0xe2, 0xfd, 0xea, 0xc0, 0x83, 0x94, 0xc6, 0x54, 0x72, 0x81, 0x97, 0xe4, 0x6d, 0xe5,
	0x86, 0x7a, 0x50, 0x1b, 0xb0, 0x05, 0x17, 0x21, 0x59, 0x11, 0x26, 0x93, 0x03, 0x68, 0x28, 0x6b,
	0x03, 0xf7, 0x4c, 0x23, 0xf7, 0x37, 0x07, 0x1e, 0x6a, 0xde, 0xaf, 0x4d, 0x70, 0x4f, 0x35, 0xf2,
	0x0c, 0xcb, 0xfb, 0x30, 0xfc, 0x19, 0x6a, 0xd7, 0x7c, 0x7e, 0xf7, 0x3a, 0xa4, 0xea, 0x23, 0x1c,
	0x4a, 0x22, 0x3c, 0x3e, 0xe3, 0x72, 0x48, 0x36, 0x8a, 0x5e, 0xd5, 0xcb, 0xa1, 0xe8, 0x02, 0xaa,
	0xba, 0x28, 0x93, 0x0a, 0xcf, 0x00, 0xf7, 0x4f, 0x07, 0x8e, 0xac, 0xcb, 0xdc, 0x81, 0x93, 0xaf,
	0x69, 0x70, 0x4b, 0xc4, 0xd5, 0x62, 0x11, 0x3b, 0x49, 0x09, 0xe4, 0x60, 0xe4, 0xc2, 0x51, 0x0c,
	0xbd, 0xc4, 0xbe, 0x4f, 0x64, 0x12, 0xde, 0xc2, 0xd0, 0x13, 0x80, 0x09, 0x11, 0x21, 0x67, 0x93,
	0xf5, 0xec, 0x2e, 0x89, 0x6e, 0x20, 0xa8, 0x05, 0xf7, 0xfb, 0x94, 0x2f, 0xd4, 0x6a, 0x45, 0xad,
	0xea, 0x6f, 0xf4, 0x91, 0x49, 0xfc, 0x5e, 0xe1, 0x75, 0x33, 0x12, 0xf9, 0xa5, 0x04, 0xc7, 0xd6,
	0x99, 0x64, 0xb1, 0x0d, 0x15, 0x0d, 0xa4, 0x28, 0xd3, 0x52, 0x71, 0xa6, 0xef, 0xc3, 0x71, 0x06,
	0xf5, 0x29, 0x4f, 0x12, 0xb1, 0xc1, 0x4c, 0x8f, 0xab, 0xc1, 0x34, 0x3a, 0x8e, 0x8a, 0xa9, 0x47,
	0x8c, 0xe5, 0xf4, 0xb8, 0xb7, 0x53, 0x8f, 0xc3, 0x5d, 0x7a, 0xbc, 0xf3, 0x7f, 0x7a, 0xfc, 0xe5,
	0x58, 0xc5, 0x18, 0x95, 0xc1, 0x0b, 0xba, 0x22, 0xa1, 0xc4, 0xab, 0x40, 0x89, 0x51, 0xf6, 0x32,
	0xa0, 0xa8, 0xec, 0x4a, 0xc5, 0x65, 0x77, 0x05, 0x8d, 0xb8, 0xc0, 0xb2, 0xf6, 0x92, 0x14, 0xfa,
	0xb9, 0x22, 0x93, 0x5f, 0xf4, 0xb6, 0xcc, 0xd1, 0x27, 0x50, 0xcb, 0xbe, 0xc2, 0x66, 0xa5, 0x5d,
	0xee, 0xd4, 0x7a, 0x27, 0x6a, 0xb7, 0xb1, 0xcf, 0xb4, 0x71, 0x7f, 0x77, 0xb6, 0xc3, 0xa2, 0x8f,
	0xe1, 0x6c, 0x22, 0x38, 0xbf, 0x19, 0xdf, 0xbc, 0xe4, 0xe2, 0x4e, 0x5f, 0x83, 0xf8, 0xa4, 0x8b,
	0x96, 0xd0, 0x00, 0xce, 0x0d, 0xd8, 0xc8, 0x20, 0xbe, 0xd9, 0x5b, 0x1c, 0x8a, 0xad, 0xa3, 0x31,
	0x79, 0x8d, 0x43, 0x69, 0x48, 0x33, 0xa2, 0x8c, 0x88, 0xb0, 0x59, 0x56, 0xc3, 0xa6, 0x78, 0xd1,
	0x1d, 0x00, 0x32, 0x5b, 0x72, 0x18, 0x70, 0x16, 0x12, 0x74, 0x09, 0x60, 0xf0, 0x70, 0x8a, 0x79,
	0x18, 0x26, 0xee, 0x1f, 0x8e, 0xb9, 0x03, 0x7d, 0x0e, 0x87, 0x53, 0x89, 0xe5, 0x3a, 0x54, 0x7b,
	0xeb, 0xbd, 0x76, 0x6e, 0xaf, 0xf1, 0x37, 0xb6, 0xf3, 0x12, 0x7b, 0xbb, 0x22, 0x4a, 0xf9, 0x8a,
	0xb8, 0x80, 0xea, 0x64, 0x3d, 0xf3, 0xe9, 0x3c, 0x92, 0x34, 0x69, 0x1b, 0x1a, 0xb0, 0x9b, 0x4a,
	0x25, 0xdf, 0x54, 0x5c, 0x3d, 0x87, 0x75, 0x54, 0x74, 0x08, 0xa5, 0xf1, 0xb0, 0x71, 0x10, 0xfd,
	0x0e, 0xc7, 0x0d, 0xa7, 0xf7, 0x77, 0x05, 0xee, 0x0f, 0x92, 0xb7, 0x11, 0xfa, 0x12, 0x4e, 0xa2,
	0x26, 0x68, 0x68, 0x86, 0xe2, 0xb6, 0x69, 0xb4, 0xc6, 0xd6, 0x83, 0x6e, 0xfc, 0x6c, 0xea, 0xa6,
	0xcf, 0xa6, 0xee, 0x20, 0x7a, 0x36, 0xb9, 0x07, 0xe8, 0x2b, 0x38, 0xfd, 0x9e, 0xf9, 0x6f, 0xe0,
	0xe0, 0x39, 0xa0, 0xe8, 0xc5, 0x91, 0x36, 0xc2, 0x11, 0x65, 0x94, 0x2d, 0x51, 0xd3, 0x9a, 0x44,
	0xc6, 0x93, 0x64, 0x87, 0xa7, 0xef, 0xe0, 0x2c, 0x32, 0xd4, 0x9d, 0x28, 0x71, 0xf5, 0xc8, 0x9e,
	0x19, 0xfb, 0xf9, 0x1a, 0x69, 0x19, 0xf5, 0x4b, 0x09, 0x3d, 0xb1, 0x38, 0x6d, 0x8d, 0xf8, 0xd6,
	0xc3, 0x7c, 0xe9, 0x24, 0x75, 0xe6, 0x1e, 0xa0, 0x31, 0x9c, 0xa6, 0xee, 0x34, 0x11, 0xf4, 0x9e,
	0x4d, 0xec, 0x95, 0x1c, 0x7e, 0x03, 0xc7, 0xd1, 0x48, 0xcd, 0xc8, 0x3d, 0xb6, 0xc8, 0xd9, 0xe3,
	0x76, 0xa7, 0xfa, 0x75, 0xe5, 0x27, 0x63, 0x75, 0x61, 0xb3, 0xda, 0xd7, 0xd3, 0xec, 0x50, 0x21,
	0x9f, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x91, 0x80, 0x2c, 0x76, 0x0b, 0x00, 0x00,
}
