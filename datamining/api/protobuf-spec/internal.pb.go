// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WalletRequest struct {
	EncryptedHashPerson  []byte   `protobuf:"bytes,1,opt,name=EncryptedHashPerson,proto3" json:"EncryptedHashPerson,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletRequest) Reset()         { *m = WalletRequest{} }
func (m *WalletRequest) String() string { return proto.CompactTextString(m) }
func (*WalletRequest) ProtoMessage()    {}
func (*WalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_3cfbe6f19c221c9f, []int{0}
}
func (m *WalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletRequest.Unmarshal(m, b)
}
func (m *WalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletRequest.Marshal(b, m, deterministic)
}
func (dst *WalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletRequest.Merge(dst, src)
}
func (m *WalletRequest) XXX_Size() int {
	return xxx_messageInfo_WalletRequest.Size(m)
}
func (m *WalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WalletRequest proto.InternalMessageInfo

func (m *WalletRequest) GetEncryptedHashPerson() []byte {
	if m != nil {
		return m.EncryptedHashPerson
	}
	return nil
}

type Wallet struct {
	EncryptedBioData     []byte     `protobuf:"bytes,1,opt,name=EncryptedBioData,proto3" json:"EncryptedBioData,omitempty"`
	SignatureBioData     *Signature `protobuf:"bytes,2,opt,name=SignatureBioData,proto3" json:"SignatureBioData,omitempty"`
	EncryptedWalletData  []byte     `protobuf:"bytes,3,opt,name=EncryptedWalletData,proto3" json:"EncryptedWalletData,omitempty"`
	SignatureWalletData  *Signature `protobuf:"bytes,4,opt,name=SignatureWalletData,proto3" json:"SignatureWalletData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Wallet) Reset()         { *m = Wallet{} }
func (m *Wallet) String() string { return proto.CompactTextString(m) }
func (*Wallet) ProtoMessage()    {}
func (*Wallet) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_3cfbe6f19c221c9f, []int{1}
}
func (m *Wallet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Wallet.Unmarshal(m, b)
}
func (m *Wallet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Wallet.Marshal(b, m, deterministic)
}
func (dst *Wallet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Wallet.Merge(dst, src)
}
func (m *Wallet) XXX_Size() int {
	return xxx_messageInfo_Wallet.Size(m)
}
func (m *Wallet) XXX_DiscardUnknown() {
	xxx_messageInfo_Wallet.DiscardUnknown(m)
}

var xxx_messageInfo_Wallet proto.InternalMessageInfo

func (m *Wallet) GetEncryptedBioData() []byte {
	if m != nil {
		return m.EncryptedBioData
	}
	return nil
}

func (m *Wallet) GetSignatureBioData() *Signature {
	if m != nil {
		return m.SignatureBioData
	}
	return nil
}

func (m *Wallet) GetEncryptedWalletData() []byte {
	if m != nil {
		return m.EncryptedWalletData
	}
	return nil
}

func (m *Wallet) GetSignatureWalletData() *Signature {
	if m != nil {
		return m.SignatureWalletData
	}
	return nil
}

type StorageResult struct {
	HashUpdatedWallet    []byte   `protobuf:"bytes,1,opt,name=HashUpdatedWallet,proto3" json:"HashUpdatedWallet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageResult) Reset()         { *m = StorageResult{} }
func (m *StorageResult) String() string { return proto.CompactTextString(m) }
func (*StorageResult) ProtoMessage()    {}
func (*StorageResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_3cfbe6f19c221c9f, []int{2}
}
func (m *StorageResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageResult.Unmarshal(m, b)
}
func (m *StorageResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageResult.Marshal(b, m, deterministic)
}
func (dst *StorageResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageResult.Merge(dst, src)
}
func (m *StorageResult) XXX_Size() int {
	return xxx_messageInfo_StorageResult.Size(m)
}
func (m *StorageResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageResult.DiscardUnknown(m)
}

var xxx_messageInfo_StorageResult proto.InternalMessageInfo

func (m *StorageResult) GetHashUpdatedWallet() []byte {
	if m != nil {
		return m.HashUpdatedWallet
	}
	return nil
}

type WalletResult struct {
	EncryptedWallet        []byte   `protobuf:"bytes,1,opt,name=EncryptedWallet,proto3" json:"EncryptedWallet,omitempty"`
	EncryptedAESkey        []byte   `protobuf:"bytes,2,opt,name=EncryptedAESkey,proto3" json:"EncryptedAESkey,omitempty"`
	EncryptedWalletAddress []byte   `protobuf:"bytes,3,opt,name=EncryptedWalletAddress,proto3" json:"EncryptedWalletAddress,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *WalletResult) Reset()         { *m = WalletResult{} }
func (m *WalletResult) String() string { return proto.CompactTextString(m) }
func (*WalletResult) ProtoMessage()    {}
func (*WalletResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_3cfbe6f19c221c9f, []int{3}
}
func (m *WalletResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletResult.Unmarshal(m, b)
}
func (m *WalletResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletResult.Marshal(b, m, deterministic)
}
func (dst *WalletResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletResult.Merge(dst, src)
}
func (m *WalletResult) XXX_Size() int {
	return xxx_messageInfo_WalletResult.Size(m)
}
func (m *WalletResult) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletResult.DiscardUnknown(m)
}

var xxx_messageInfo_WalletResult proto.InternalMessageInfo

func (m *WalletResult) GetEncryptedWallet() []byte {
	if m != nil {
		return m.EncryptedWallet
	}
	return nil
}

func (m *WalletResult) GetEncryptedAESkey() []byte {
	if m != nil {
		return m.EncryptedAESkey
	}
	return nil
}

func (m *WalletResult) GetEncryptedWalletAddress() []byte {
	if m != nil {
		return m.EncryptedWalletAddress
	}
	return nil
}

type Signature struct {
	Biod                 []byte   `protobuf:"bytes,1,opt,name=Biod,proto3" json:"Biod,omitempty"`
	Person               []byte   `protobuf:"bytes,2,opt,name=Person,proto3" json:"Person,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_3cfbe6f19c221c9f, []int{4}
}
func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (dst *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(dst, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetBiod() []byte {
	if m != nil {
		return m.Biod
	}
	return nil
}

func (m *Signature) GetPerson() []byte {
	if m != nil {
		return m.Person
	}
	return nil
}

func init() {
	proto.RegisterType((*WalletRequest)(nil), "api.WalletRequest")
	proto.RegisterType((*Wallet)(nil), "api.Wallet")
	proto.RegisterType((*StorageResult)(nil), "api.StorageResult")
	proto.RegisterType((*WalletResult)(nil), "api.WalletResult")
	proto.RegisterType((*Signature)(nil), "api.Signature")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InternalClient is the client API for Internal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InternalClient interface {
	GetWallet(ctx context.Context, in *WalletRequest, opts ...grpc.CallOption) (*WalletResult, error)
	StoreWallet(ctx context.Context, in *Wallet, opts ...grpc.CallOption) (*StorageResult, error)
}

type internalClient struct {
	cc *grpc.ClientConn
}

func NewInternalClient(cc *grpc.ClientConn) InternalClient {
	return &internalClient{cc}
}

func (c *internalClient) GetWallet(ctx context.Context, in *WalletRequest, opts ...grpc.CallOption) (*WalletResult, error) {
	out := new(WalletResult)
	err := c.cc.Invoke(ctx, "/api.Internal/GetWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalClient) StoreWallet(ctx context.Context, in *Wallet, opts ...grpc.CallOption) (*StorageResult, error) {
	out := new(StorageResult)
	err := c.cc.Invoke(ctx, "/api.Internal/StoreWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalServer is the server API for Internal service.
type InternalServer interface {
	GetWallet(context.Context, *WalletRequest) (*WalletResult, error)
	StoreWallet(context.Context, *Wallet) (*StorageResult, error)
}

func RegisterInternalServer(s *grpc.Server, srv InternalServer) {
	s.RegisterService(&_Internal_serviceDesc, srv)
}

func _Internal_GetWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServer).GetWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Internal/GetWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServer).GetWallet(ctx, req.(*WalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Internal_StoreWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Wallet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServer).StoreWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Internal/StoreWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServer).StoreWallet(ctx, req.(*Wallet))
	}
	return interceptor(ctx, in, info, handler)
}

var _Internal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Internal",
	HandlerType: (*InternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWallet",
			Handler:    _Internal_GetWallet_Handler,
		},
		{
			MethodName: "StoreWallet",
			Handler:    _Internal_StoreWallet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal.proto",
}

func init() { proto.RegisterFile("internal.proto", fileDescriptor_internal_3cfbe6f19c221c9f) }

var fileDescriptor_internal_3cfbe6f19c221c9f = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xdf, 0x4a, 0x02, 0x41,
	0x14, 0xc6, 0xdd, 0x14, 0xc9, 0xe3, 0x9f, 0xf4, 0x08, 0x12, 0x5e, 0xc9, 0x5c, 0x49, 0x84, 0x88,
	0x45, 0x41, 0x10, 0xa4, 0x24, 0xd5, 0x5d, 0xac, 0x44, 0xd7, 0x53, 0x7b, 0xb0, 0xa1, 0x65, 0x67,
	0x9b, 0x19, 0x2f, 0x7c, 0x95, 0x9e, 0xaf, 0x07, 0x09, 0x67, 0xc7, 0xcd, 0xfd, 0xd3, 0xdd, 0xee,
	0x39, 0xdf, 0x77, 0xce, 0x37, 0x3f, 0x0e, 0x74, 0x44, 0x64, 0x48, 0x45, 0x3c, 0x9c, 0xc4, 0x4a,
	0x1a, 0x89, 0x55, 0x1e, 0x0b, 0x36, 0x87, 0xf6, 0x2b, 0x0f, 0x43, 0x32, 0x3e, 0x7d, 0x6d, 0x48,
	0x1b, 0x9c, 0x42, 0x7f, 0x19, 0xbd, 0xab, 0x6d, 0x6c, 0x28, 0x78, 0xe4, 0xfa, 0xe3, 0x99, 0x94,
	0x96, 0xd1, 0xa9, 0x37, 0xf2, 0xc6, 0x2d, 0xbf, 0xac, 0xc5, 0x7e, 0x3c, 0xa8, 0x27, 0x33, 0xf0,
	0x0c, 0xba, 0xa9, 0x62, 0x21, 0xe4, 0x3d, 0x37, 0xdc, 0x39, 0x0b, 0x75, 0xbc, 0x81, 0xee, 0x4a,
	0xac, 0x23, 0x6e, 0x36, 0x8a, 0xf6, 0xda, 0xa3, 0x91, 0x37, 0x6e, 0xce, 0x3a, 0x13, 0x1e, 0x8b,
	0x49, 0xda, 0xf4, 0x0b, 0xba, 0x4c, 0xc8, 0x64, 0xb5, 0xb5, 0x57, 0x73, 0x21, 0xff, 0x5a, 0x78,
	0x07, 0xfd, 0x74, 0xca, 0x81, 0xa3, 0x56, 0xba, 0xb0, 0x4c, 0xca, 0x6e, 0xa1, 0xbd, 0x32, 0x52,
	0xf1, 0x35, 0xf9, 0xa4, 0x37, 0xa1, 0xc1, 0x73, 0xe8, 0xed, 0x28, 0xbc, 0xc4, 0x01, 0x4f, 0x77,
	0xb9, 0xd7, 0x16, 0x1b, 0xec, 0xdb, 0x83, 0xd6, 0x9e, 0xb4, 0xb5, 0x8f, 0xe1, 0x24, 0x17, 0xd4,
	0x99, 0xf3, 0xe5, 0x8c, 0x72, 0xbe, 0x5c, 0x7d, 0xd2, 0xd6, 0x82, 0x3a, 0x54, 0x26, 0x65, 0xbc,
	0x82, 0x41, 0xce, 0x3c, 0x0f, 0x02, 0x45, 0x5a, 0x3b, 0x34, 0xff, 0x74, 0xd9, 0x35, 0x34, 0xd2,
	0x27, 0x23, 0x42, 0x6d, 0x21, 0x64, 0xe0, 0xd2, 0xd8, 0x6f, 0x1c, 0x40, 0xdd, 0x1d, 0x42, 0xb2,
	0xd9, 0xfd, 0xcd, 0x14, 0x1c, 0x3f, 0xb9, 0xab, 0xc2, 0x4b, 0x68, 0x3c, 0x90, 0x71, 0x99, 0xd1,
	0x22, 0xcd, 0x9c, 0xd6, 0xb0, 0x97, 0xa9, 0xed, 0x20, 0xb0, 0x0a, 0x4e, 0xa1, 0xb9, 0xc3, 0xea,
	0x48, 0x63, 0xf3, 0x40, 0x33, 0x4c, 0x86, 0x64, 0xa8, 0xb3, 0xca, 0x5b, 0xdd, 0x9e, 0xef, 0xc5,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99, 0x8f, 0xa5, 0xfb, 0xd0, 0x02, 0x00, 0x00,
}
