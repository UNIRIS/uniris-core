syntax = "proto3";

import "google/protobuf/empty.proto";
import "common.proto";

package api;

service Internal {
    rpc GetAccount (AccountSearchRequest) returns (AccountSearchResult) {}
    rpc CreateKeychain(KeychainCreationRequest) returns (CreationResult) {}
    rpc CreateID(IDCreationRequest) returns (CreationResult) {}
    rpc GetSharedKeys(google.protobuf.Empty) returns(SharedKeysResult) {}
    rpc IsEmitterAuthorized(AuthorizationRequest) returns (AuthorizationResponse) {}
    rpc GetTransactionStatus(TransactionStatusRequest) returns(TransactionStatusResponse) {}
    rpc CreateContract(ContractCreationRequest) returns (CreationResult){}
    rpc CreateContractMessage(ContractMessageCreationRequest) returns (CreationResult) {}
    rpc GetContractState(ContractStateRequest) returns (ContractStateResponse){}
}

message AccountSearchRequest {
    string EncryptedIDHash = 1;
}

message AccountSearchResult {
    string EncryptedWallet = 1;
    string EncryptedAESkey = 2;
    string EncryptedAddress =3;
    string Signature = 4;
}

message KeychainCreationRequest {
    string EncryptedKeychain = 1;
}

message IDCreationRequest {
    string EncryptedID = 1;
}

message CreationResult {
    string TransactionHash = 1;
    string MasterPeerIP = 2;
    string Signature = 3;
}

message SharedKeysResult {
    string RobotPublicKey = 1;
    string RobotPrivateKey = 2;
    repeated SharedKeyPair EmitterKeys = 3;
}

message SharedKeyPair {
    string EncryptedPrivateKey = 1;
    string PublicKey = 2;
}

message AuthorizationRequest {
    string PublicKey = 1;
}

message AuthorizationResponse {
    bool Status = 1; 
}

message ContractCreationRequest {
    string EncryptedContract = 1;
}

message ContractMessageCreationRequest {
    string EncryptedMessage = 1;
    string ContractAddress = 2;
}
