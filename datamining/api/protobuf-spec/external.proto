syntax = "proto3";

import "google/protobuf/empty.proto";

import "common.proto";

package api;

service External {

    rpc GetBiometric(BiometricRequest) returns(BiometricResponse) {}
    rpc GetKeychain(KeychainRequest) returns(KeychainResponse) {}

    rpc LockTransaction(LockRequest) returns (LockAck) {}
    rpc UnlockTransaction(LockRequest) returns (LockAck) {}

    rpc LeadKeychainMining(KeychainLeadRequest) returns (google.protobuf.Empty) {}
    rpc LeadBiometricMining(BiometricLeadRequest) returns (google.protobuf.Empty) {}
    
    rpc ValidateKeychain(KeychainValidationRequest) returns (ValidationResponse) {}
    rpc ValidateBiometric(BiometricValidationRequest) returns (ValidationResponse) {}

    rpc StoreKeychain(KeychainStorageRequest) returns (StorageAck) {}
    rpc StoreBiometric(BiometricStorageRequest) returns (StorageAck) {}
}

message LockAck {
    string Signature = 1;
    string LockHash = 2;
}

message StorageAck {
    string Signature = 1;
    string StorageHash = 2;
}

message KeychainLeadRequest {
    string TransactionHash = 1;
    repeated string ValidatorPeerIPs = 2;
    string EncryptedKeychainData = 3;
    Signature SignatureKeychainData = 4;
    string SignatureRequest = 5;
}

message BiometricLeadRequest {
    string TransactionHash = 1;
    repeated string ValidatorPeerIPs = 2;
    string EncryptedBioData = 3;
    Signature SignatureBioData = 4;
    string SignatureRequest = 5;
}

message KeychainValidationRequest {
    string TransactionHash = 1;
    KeychainData Data = 2;
    string Signature = 3;
}

message BiometricValidationRequest {
    string TransactionHash = 1;
    BiometricData Data = 2;
    string Signature = 3;
}

message KeychainStorageRequest {
    KeychainData Data = 1;
    Endorsement Endorsement = 2;
    string Signature = 3;
}

message BiometricStorageRequest {
    BiometricData Data = 1;
    Endorsement Endorsement = 2;
    string Signature = 3;
}

message LockRequest {
    string Address = 1;
    string TransactionHash = 2;
    string MasterRobotKey = 3;
    string Signature = 4;
}

message KeychainData {
	string CipherAddrRobot = 1;
	string CipherWallet = 2;
	string PersonPubk = 3;
    Signature Signature = 5;
}

message BiometricData {
    string PersonHash = 1;
    string CipherAddrRobot = 2;
    string CipherAddrBio = 3;
	string CipherAESKey = 4;
	string PersonPubk = 5;
    Signature Signature = 7;
}

message Endorsement {
    string LastTransactionHash = 1;
    string TransactionHash = 2;
    MasterValidation MasterValidation = 3;
    repeated Validation Validations = 4;
}

message MasterValidation {
    string ProofOfWorkKey = 1;
    Validation ProofOfWorkValidation = 2;
    repeated string LastTransactionMiners = 3;
}

message ValidationResponse {
    Validation Validation = 1;
    string Signature = 2;
}

message Validation {
    ValidationStatus Status = 1;
    int64 Timestamp = 2;
    string PublicKey = 3;
    string Signature = 4;

    enum ValidationStatus {
        OK = 0;
        KO = 1;
    }
}

message BiometricRequest {
    string EncryptedPersonHash= 1;
    string Signature = 2;
}

message KeychainRequest {
    string EncryptedAddress = 1;
    string Signature = 2;
}

message BiometricResponse {
    BiometricData Data = 1;
    Endorsement Endorsement = 2;
    string Signature = 3;
}

message KeychainResponse {
    KeychainData Data = 1;
    Endorsement Endorsement = 2;
    string Signature = 3;
}