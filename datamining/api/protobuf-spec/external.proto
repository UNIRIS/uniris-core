syntax = "proto3";

import "google/protobuf/empty.proto";

package api;

service External {

    rpc GetID(IDRequest) returns(IDResponse) {}
    rpc GetKeychain(KeychainRequest) returns(KeychainResponse) {}

    rpc LockTransaction(LockRequest) returns (LockAck) {}
    rpc UnlockTransaction(LockRequest) returns (LockAck) {}

    rpc LeadKeychainMining(KeychainLeadRequest) returns (google.protobuf.Empty) {}
    rpc LeadIDMining(IDLeadRequest) returns (google.protobuf.Empty) {}
    
    rpc ValidateKeychain(KeychainValidationRequest) returns (ValidationResponse) {}
    rpc ValidateID(IDValidationRequest) returns (ValidationResponse) {}

    rpc StoreKeychain(KeychainStorageRequest) returns (StorageAck) {}
    rpc StoreID(IDStorageRequest) returns (StorageAck) {}
}

message LockAck {
    string Signature = 1;
    string LockHash = 2;
}

message StorageAck {
    string Signature = 1;
    string StorageHash = 2;
}

message KeychainLeadRequest {
    string TransactionHash = 1;
    repeated string ValidatorPeerIPs = 2;
    string EncryptedKeychain = 3;
    string SignatureRequest = 5;
}

message IDLeadRequest {
    string TransactionHash = 1;
    repeated string ValidatorPeerIPs = 2;
    string EncryptedID = 3;
    string SignatureRequest = 5;
}

message KeychainValidationRequest {
    string TransactionHash = 1;
    Keychain Data = 2;
    string Signature = 3;
}

message IDValidationRequest {
    string TransactionHash = 1;
    ID Data = 2;
    string Signature = 3;
}

message KeychainStorageRequest {
    Keychain Data = 1;
    Endorsement Endorsement = 2;
    string Signature = 3;
}

message IDStorageRequest {
    ID Data = 1;
    Endorsement Endorsement = 2;
    string Signature = 3;
}

message LockRequest {
    string Address = 1;
    string TransactionHash = 2;
    string MasterRobotKey = 3;
    string Signature = 4;
}

message Keychain {
	string EncryptedAddrByRobot = 1;
	string EncryptedWallet = 2;
	string IDPublicKey = 3;
    string IDSignature = 4;
    string EmitterSignature = 5;
    Proposal Proposal = 6;
}

message ID {
    string Hash = 1;
    string EncryptedAddrByRobot = 2;
    string EncryptedAddrByID = 3;
	string EncryptedAESKey = 4;
	string PublicKey = 5;
    string IDSignature = 6;
    string EmitterSignature = 7;
    Proposal Proposal = 8;
}

message Endorsement {
    string LastTransactionHash = 1;
    string TransactionHash = 2;
    MasterValidation MasterValidation = 3;
    repeated Validation Validations = 4;
}

message MasterValidation {
    string ProofOfWorkKey = 1;
    Validation ProofOfWorkValidation = 2;
    repeated string LastTransactionMiners = 3;
}

message ValidationResponse {
    Validation Validation = 1;
    string Signature = 2;
}

message Validation {
    ValidationStatus Status = 1;
    int64 Timestamp = 2;
    string PublicKey = 3;
    string Signature = 4;

    enum ValidationStatus {
        OK = 0;
        KO = 1;
    }
}

message IDRequest {
    string EncryptedIDHash = 1;
    string Signature = 2;
}

message KeychainRequest {
    string EncryptedAddress = 1;
    string Signature = 2;
}

message IDResponse {
    ID Data = 1;
    Endorsement Endorsement = 2;
    string Signature = 3;
}

message KeychainResponse {
    Keychain Data = 1;
    Endorsement Endorsement = 2;
    string Signature = 3;
}

message Proposal {
    KeyPairProposal SharedEmitterKeyPair = 1;
}

message KeyPairProposal {
    string EncryptedPrivateKey = 1;
    string PublicKey = 2;
}